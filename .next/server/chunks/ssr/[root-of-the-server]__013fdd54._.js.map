{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/unitview_firebase/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    return (\n      <button\n        className={cn(buttonVariants({ variant, size }), className)}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,wQACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;YACT,WAAW;YACX,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;QAAK,IAAI;QACjD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/unitview_firebase/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitives from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitives.Root\n\nconst DialogTrigger = DialogPrimitives.Trigger\n\nconst DialogPortal = DialogPrimitives.Portal\n\nconst DialogClose = DialogPrimitives.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitives.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitives.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitives.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitives.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitives.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitives.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitives.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitives.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitives.Close>\n    </DialogPrimitives.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitives.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitives.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitives.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.E_lementRef<typeof DialogPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitives.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAqB;AAEpC,MAAM,gBAAgB,kKAAA,CAAA,UAAwB;AAE9C,MAAM,eAAe,kKAAA,CAAA,SAAuB;AAE5C,MAAM,cAAc,kKAAA,CAAA,QAAsB;AAE1C,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAwB,CAAC,WAAW;AAEhE,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAwB;gBACvB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAsB;wBAAC,WAAU;;0CAChC,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAwB,CAAC,WAAW;AAEhE,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAsB,CAAC,WAAW;AAE5D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA4B;QAC3B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA4B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/unitview_firebase/src/components/facility/create-unit-dialog.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport * as React from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Unit } from '@/lib/firebase';\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from '@/components/ui/dialog';\n\ninterface CreateUnitDialogProps {\n  open: boolean;\n  onClose: () => void;\n  onCreateUnit: (unitData: Omit<Unit, 'id' | 'createdAt' | 'updatedAt' | 'facilityId'>) => void;\n}\n\nexport function CreateUnitDialog({ open, onClose, onCreateUnit }: CreateUnitDialogProps) {\n  const [formData, setFormData] = useState<Omit<Unit, 'id' | 'createdAt' | 'updatedAt' | 'facilityId'>>({\n    designation: '',\n    roomCount: 0,\n    roomRanges: [''],\n    nurseCardCount: 2,\n    pctCardCount: 1,\n    hasChargeNurse: true,\n    hasUnitClerk: true\n  });\n  \n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n    \n    if (!formData.designation.trim()) {\n      newErrors.designation = 'Unit designation is required';\n    }\n    \n    if (formData.roomCount <= 0) {\n      newErrors.roomCount = 'Number of rooms must be greater than 0';\n    }\n    \n    if (formData.roomRanges.length === 0 || !formData.roomRanges[0]) {\n      newErrors.roomRanges = 'At least one room range is required';\n    } else {\n      // Validate room range format (e.g., 401-412)\n      const invalidRanges = formData.roomRanges.filter(range => {\n        if (!range) return true;\n        const parts = range.split('-');\n        if (parts.length !== 2) return true;\n        const [start, end] = parts.map(p => parseInt(p.trim(), 10));\n        return isNaN(start) || isNaN(end) || start >= end;\n      });\n      \n      if (invalidRanges.length > 0) {\n        newErrors.roomRanges = 'Room ranges must be in format \"start-end\" (e.g., 401-412)';\n      }\n    }\n    \n    if (formData.nurseCardCount <= 0) {\n      newErrors.nurseCardCount = 'Number of nurse cards must be greater than 0';\n    }\n    \n    if (formData.pctCardCount < 0) {\n      newErrors.pctCardCount = 'Number of PCT cards cannot be negative';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value, type } = e.target as HTMLInputElement;\n    \n    if (type === 'checkbox') {\n      const { checked } = e.target as HTMLInputElement;\n      setFormData({ ...formData, [name]: checked });\n    } else if (name === 'roomRanges') {\n      // Handle room ranges as comma-separated values\n      setFormData({ ...formData, roomRanges: value.split(',').map(range => range.trim()).filter(Boolean) });\n    } else if (name === 'roomCount' || name === 'nurseCardCount' || name === 'pctCardCount') {\n      // Convert string to number for numeric fields\n      setFormData({ ...formData, [name]: parseInt(value, 10) || 0 });\n    } else {\n      setFormData({ ...formData, [name]: value });\n    }\n    \n    // Clear error for this field if it exists\n    if (errors[name]) {\n      setErrors({ ...errors, [name]: '' });\n    }\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (validateForm()) {\n      onCreateUnit(formData);\n      // Reset form\n      setFormData({\n        designation: '',\n        roomCount: 0,\n        roomRanges: [''],\n        nurseCardCount: 2,\n        pctCardCount: 1,\n        hasChargeNurse: true,\n        hasUnitClerk: true\n      });\n      setErrors({});\n    }\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onClose}>\n        <DialogContent className=\"sm:max-w-md\">\n            <DialogHeader>\n                <DialogTitle>Create New Unit</DialogTitle>\n                <DialogDescription>Fill in the details for the new unit.</DialogDescription>\n            </DialogHeader>\n            <form onSubmit={handleSubmit}>\n              <div className=\"space-y-4 py-4\">\n                {/* Unit Designation */}\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">\n                    Unit Designation\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"designation\"\n                    value={formData.designation}\n                    onChange={handleChange}\n                    className={`w-full p-2 border rounded ${errors.designation ? 'border-red-500' : 'border-gray-300'}`}\n                    placeholder=\"e.g., 4 West\"\n                  />\n                  {errors.designation && (\n                    <p className=\"text-red-500 text-xs mt-1\">{errors.designation}</p>\n                  )}\n                </div>\n                \n                {/* Number of Patient Rooms */}\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">\n                    Number of Patient Rooms\n                  </label>\n                  <input\n                    type=\"number\"\n                    name=\"roomCount\"\n                    value={formData.roomCount}\n                    onChange={handleChange}\n                    className={`w-full p-2 border rounded ${errors.roomCount ? 'border-red-500' : 'border-gray-300'}`}\n                    min=\"1\"\n                  />\n                  {errors.roomCount && (\n                    <p className=\"text-red-500 text-xs mt-1\">{errors.roomCount}</p>\n                  )}\n                </div>\n                \n                {/* Room Number Ranges */}\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">\n                    Room Number Range(s)\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"roomRanges\"\n                    value={formData.roomRanges.join(', ')}\n                    onChange={handleChange}\n                    className={`w-full p-2 border rounded ${errors.roomRanges ? 'border-red-500' : 'border-gray-300'}`}\n                    placeholder=\"e.g., 401-412, 450-455\"\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Enter ranges separated by commas (e.g., 401-412, 450-455)\n                  </p>\n                  {errors.roomRanges && (\n                    <p className=\"text-red-500 text-xs mt-1\">{errors.roomRanges}</p>\n                  )}\n                </div>\n                \n                {/* Nurse Cards */}\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">\n                    Standard Number of Nurse Cards\n                  </label>\n                  <input\n                    type=\"number\"\n                    name=\"nurseCardCount\"\n                    value={formData.nurseCardCount}\n                    onChange={handleChange}\n                    className={`w-full p-2 border rounded ${errors.nurseCardCount ? 'border-red-500' : 'border-gray-300'}`}\n                    min=\"1\"\n                  />\n                  {errors.nurseCardCount && (\n                    <p className=\"text-red-500 text-xs mt-1\">{errors.nurseCardCount}</p>\n                  )}\n                </div>\n                \n                {/* PCT Cards */}\n                <div>\n                  <label className=\"block text-sm font-medium mb-1\">\n                    Number of PCT Cards\n                  </label>\n                  <input\n                    type=\"number\"\n                    name=\"pctCardCount\"\n                    value={formData.pctCardCount}\n                    onChange={handleChange}\n                    className={`w-full p-2 border rounded ${errors.pctCardCount ? 'border-red-500' : 'border-gray-300'}`}\n                    min=\"0\"\n                  />\n                  {errors.pctCardCount && (\n                    <p className=\"text-red-500 text-xs mt-1\">{errors.pctCardCount}</p>\n                  )}\n                </div>\n                \n                {/* Charge Nurse */}\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"hasChargeNurse\"\n                    checked={formData.hasChargeNurse}\n                    onChange={handleChange}\n                    className=\"mr-2\"\n                    id=\"hasChargeNurse\"\n                  />\n                  <label className=\"text-sm font-medium\" htmlFor=\"hasChargeNurse\">\n                    Include Charge Nurse Card\n                  </label>\n                </div>\n                \n                {/* Unit Clerk */}\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"hasUnitClerk\"\n                    checked={formData.hasUnitClerk}\n                    onChange={handleChange}\n                    className=\"mr-2\"\n                    id=\"hasUnitClerk\"\n                  />\n                  <label className=\"text-sm font-medium\" htmlFor=\"hasUnitClerk\">\n                    Include Unit Clerk Card\n                  </label>\n                </div>\n              </div>\n              \n              <DialogFooter className=\"pt-4\">\n                <Button variant=\"outline\" type=\"button\" onClick={onClose}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\">\n                  Create Unit\n                </Button>\n              </DialogFooter>\n            </form>\n        </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 644, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/unitview_firebase/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\";\nimport { cn } from \"@/lib/utils\";\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n));\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,8OAAC,kKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 680, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/unitview_firebase/src/components/facility/module-toggle-card.tsx"],"sourcesContent":["'use client';\n\nimport { Switch } from '@/components/ui/switch';\nimport { Module } from '@/lib/firebase';\n\ninterface ModuleToggleCardProps {\n  module: Module;\n  onToggle: () => void;\n}\n\nexport function ModuleToggleCard({ module, onToggle }: ModuleToggleCardProps) {\n  return (\n    <div className={`border rounded-lg p-4 ${module.enabled ? 'border-blue-500 bg-blue-50' : 'border-gray-200'}`}>\n      <div className=\"flex justify-between items-start mb-2\">\n        <h3 className=\"font-medium text-lg\">{module.name}</h3>\n        <Switch \n          checked={module.enabled} \n          onCheckedChange={onToggle}\n          className=\"data-[state=checked]:bg-blue-600\"\n        />\n      </div>\n      <p className=\"text-sm text-gray-600\">{module.description}</p>\n      <div className=\"mt-3\">\n        <span className={`text-xs px-2 py-1 rounded-full ${\n          module.enabled ? 'bg-blue-100 text-blue-800' : 'bg-gray-100 text-gray-800'\n        }`}>\n          {module.enabled ? 'Enabled' : 'Disabled'}\n        </span>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAUO,SAAS,iBAAiB,EAAE,MAAM,EAAE,QAAQ,EAAyB;IAC1E,qBACE,8OAAC;QAAI,WAAW,CAAC,sBAAsB,EAAE,OAAO,OAAO,GAAG,+BAA+B,mBAAmB;;0BAC1G,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAuB,OAAO,IAAI;;;;;;kCAChD,8OAAC,kIAAA,CAAA,SAAM;wBACL,SAAS,OAAO,OAAO;wBACvB,iBAAiB;wBACjB,WAAU;;;;;;;;;;;;0BAGd,8OAAC;gBAAE,WAAU;0BAAyB,OAAO,WAAW;;;;;;0BACxD,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAK,WAAW,CAAC,+BAA+B,EAC/C,OAAO,OAAO,GAAG,8BAA8B,6BAC/C;8BACC,OAAO,OAAO,GAAG,YAAY;;;;;;;;;;;;;;;;;AAKxC","debugId":null}},
    {"offset": {"line": 754, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/unitview_firebase/src/components/shared/nurse-card.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Nurse, Patient } from '@/lib/firebase';\n\ninterface NurseCardProps {\n  nurse: Nurse;\n  patients: Patient[];\n  onAssign: (patientId: string) => void;\n  onUnassign: (roomNumber: string) => void;\n  onUpdate: (data: Partial<Nurse>) => void;\n  editMode: boolean;\n}\n\nexport function NurseCard({ nurse, patients, onAssign, onUnassign, onUpdate, editMode }: NurseCardProps) {\n  const [isAssigning, setIsAssigning] = useState(false);\n  \n  // Calculate total acuity for this nurse\n  const totalAcuity = nurse.assignedRooms.reduce((sum, roomNumber) => {\n    const patient = patients.find(p => p.roomNumber === roomNumber);\n    return sum + (patient ? patient.acuity : 0);\n  }, 0);\n  \n  // Determine if nurse is overloaded\n  const isOverloaded = totalAcuity > nurse.acuityCapacity;\n  \n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onUpdate({ name: e.target.value });\n  };\n  \n  const handleSpectraChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onUpdate({ spectraNumber: e.target.value });\n  };\n  \n  const handleReliefChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onUpdate({ reliefName: e.target.value });\n  };\n  \n  const handleAcuityCapacityChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onUpdate({ acuityCapacity: parseInt(e.target.value, 10) || 0 });\n  };\n  \n  return (\n    <div className={`border rounded-lg p-4 ${isOverloaded ? 'border-red-500 bg-red-50' : 'border-blue-200'}`}>\n      <div className=\"flex justify-between items-start mb-3\">\n        <h4 className=\"font-medium\">Nurse Assignment</h4>\n        {isOverloaded && (\n          <span className=\"bg-red-100 text-red-800 text-xs px-2 py-1 rounded-full\">\n            Acuity Alert\n          </span>\n        )}\n      </div>\n      \n      {/* Nurse Information */}\n      <div className=\"space-y-2 mb-4\">\n        <div>\n          <label className=\"block text-xs text-gray-500\">Name</label>\n          {editMode ? (\n            <input\n              type=\"text\"\n              value={nurse.name}\n              onChange={handleNameChange}\n              className=\"w-full p-1 border rounded text-sm\"\n            />\n          ) : (\n            <p className=\"font-medium\">{nurse.name || 'Unassigned'}</p>\n          )}\n        </div>\n        \n        <div>\n          <label className=\"block text-xs text-gray-500\">Spectra #</label>\n          {editMode ? (\n            <input\n              type=\"text\"\n              value={nurse.spectraNumber}\n              onChange={handleSpectraChange}\n              className=\"w-full p-1 border rounded text-sm\"\n            />\n          ) : (\n            <p className=\"text-sm\">{nurse.spectraNumber || 'N/A'}</p>\n          )}\n        </div>\n        \n        <div>\n          <label className=\"block text-xs text-gray-500\">Relief</label>\n          {editMode ? (\n            <input\n              type=\"text\"\n              value={nurse.reliefName}\n              onChange={handleReliefChange}\n              className=\"w-full p-1 border rounded text-sm\"\n            />\n          ) : (\n            <p className=\"text-sm\">{nurse.reliefName || 'None'}</p>\n          )}\n        </div>\n        \n        <div>\n          <label className=\"block text-xs text-gray-500\">Acuity Capacity</label>\n          {editMode ? (\n            <input\n              type=\"number\"\n              value={nurse.acuityCapacity}\n              onChange={handleAcuityCapacityChange}\n              className=\"w-full p-1 border rounded text-sm\"\n              min=\"1\"\n            />\n          ) : (\n            <div className=\"flex items-center\">\n              <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                <div \n                  className={`h-2.5 rounded-full ${\n                    isOverloaded ? 'bg-red-600' : 'bg-blue-600'\n                  }`}\n                  style={{ width: `${Math.min(100, (totalAcuity / nurse.acuityCapacity) * 100)}%` }}\n                ></div>\n              </div>\n              <span className=\"ml-2 text-xs font-medium\">\n                {totalAcuity}/{nurse.acuityCapacity}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* Patient Assignments */}\n      <div>\n        <div className=\"flex justify-between items-center mb-2\">\n          <label className=\"text-xs text-gray-500\">Patient Assignments</label>\n          {!editMode && (\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              className=\"text-xs py-1 h-auto\"\n              onClick={() => setIsAssigning(!isAssigning)}\n            >\n              {isAssigning ? 'Done' : 'Assign'}\n            </Button>\n          )}\n        </div>\n        \n        {/* Assigned Rooms */}\n        <div className=\"space-y-1 mb-3\">\n          {nurse.assignedRooms.length > 0 ? (\n            nurse.assignedRooms.map(roomNumber => {\n              const patient = patients.find(p => p.roomNumber === roomNumber);\n              return (\n                <div key={roomNumber} className=\"flex justify-between items-center p-1.5 bg-gray-50 rounded border\">\n                  <div className=\"flex items-center\">\n                    <span className=\"font-medium text-sm\">Room {roomNumber}</span>\n                    {patient?.name && <span className=\"ml-2 text-xs\">{patient.name}</span>}\n                  </div>\n                  <div className=\"flex items-center\">\n                    {patient && (\n                      <span className={`px-1.5 py-0.5 rounded-full text-xs mr-2 ${\n                        patient.acuity >= 4 ? 'bg-red-100 text-red-800' :\n                        patient.acuity >= 3 ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-green-100 text-green-800'\n                      }`}>\n                        {patient.acuity}\n                      </span>\n                    )}\n                    {!editMode && (\n                      <button\n                        onClick={() => onUnassign(roomNumber)}\n                        className=\"text-red-500 text-xs hover:text-red-700\"\n                        aria-label=\"Remove patient assignment\"\n                      >\n                        ×\n                      </button>\n                    )}\n                  </div>\n                </div>\n              );\n            })\n          ) : (\n            <p className=\"text-sm text-gray-500 italic\">No patients assigned</p>\n          )}\n        </div>\n        \n        {/* Assignment Selector */}\n        {isAssigning && !editMode && (\n          <div className=\"mt-3 border-t pt-2\">\n            <p className=\"text-xs font-medium mb-2\">Select a patient to assign:</p>\n            <div className=\"grid grid-cols-2 gap-1\">\n              {patients\n                .filter(patient => !patient.assigned)\n                .map(patient => (\n                  <button\n                    key={patient.id}\n                    onClick={() => {\n                      onAssign(patient.id);\n                      if (nurse.assignedRooms.length >= 5) {\n                        setIsAssigning(false);\n                      }\n                    }}\n                    className=\"text-xs p-1 border rounded hover:bg-blue-50 flex justify-between items-center\"\n                  >\n                    <span>Room {patient.roomNumber}</span>\n                    <span className={`px-1.5 py-0.5 rounded-full text-xs ${\n                      patient.acuity >= 4 ? 'bg-red-100 text-red-800' :\n                      patient.acuity >= 3 ? 'bg-yellow-100 text-yellow-800' :\n                      'bg-green-100 text-green-800'\n                    }`}>\n                      {patient.acuity}\n                    </span>\n                  </button>\n                ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1180, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/unitview_firebase/src/components/shared/pct-card.tsx"],"sourcesContent":["'use client';\n\nimport { PCT } from '@/lib/firebase';\n\ninterface PCTCardProps {\n  pct: PCT;\n  onUpdate: (data: Partial<PCT>) => void;\n  editMode: boolean;\n}\n\nexport function PCTCard({ pct, onUpdate, editMode }: PCTCardProps) {\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onUpdate({ name: e.target.value });\n  };\n  \n  const handleSpectraChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onUpdate({ spectraNumber: e.target.value });\n  };\n  \n  const handleReliefChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onUpdate({ reliefName: e.target.value });\n  };\n  \n  const handleRoomRangeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onUpdate({ roomRange: e.target.value });\n  };\n  \n  return (\n    <div className=\"border border-green-200 rounded-lg p-4\">\n      <h4 className=\"font-medium mb-3\">Patient Care Tech</h4>\n      \n      {/* PCT Information */}\n      <div className=\"space-y-2 mb-4\">\n        <div>\n          <label className=\"block text-xs text-gray-500\">Name</label>\n          {editMode ? (\n            <input\n              type=\"text\"\n              value={pct.name}\n              onChange={handleNameChange}\n              className=\"w-full p-1 border rounded text-sm\"\n            />\n          ) : (\n            <p className=\"font-medium\">{pct.name || 'Unassigned'}</p>\n          )}\n        </div>\n        \n        <div>\n          <label className=\"block text-xs text-gray-500\">Spectra #</label>\n          {editMode ? (\n            <input\n              type=\"text\"\n              value={pct.spectraNumber}\n              onChange={handleSpectraChange}\n              className=\"w-full p-1 border rounded text-sm\"\n            />\n          ) : (\n            <p className=\"text-sm\">{pct.spectraNumber || 'N/A'}</p>\n          )}\n        </div>\n        \n        <div>\n          <label className=\"block text-xs text-gray-500\">Relief</label>\n          {editMode ? (\n            <input\n              type=\"text\"\n              value={pct.reliefName}\n              onChange={handleReliefChange}\n              className=\"w-full p-1 border rounded text-sm\"\n            />\n          ) : (\n            <p className=\"text-sm\">{pct.reliefName || 'None'}</p>\n          )}\n        </div>\n      </div>\n      \n      {/* Room Range Assignment */}\n      <div>\n        <label className=\"block text-xs text-gray-500 mb-1\">Room Assignment</label>\n        {editMode ? (\n          <input\n            type=\"text\"\n            value={pct.roomRange}\n            onChange={handleRoomRangeChange}\n            className=\"w-full p-1 border rounded text-sm\"\n            placeholder=\"e.g., 401-412\"\n          />\n        ) : (\n          <div className=\"bg-green-50 border border-green-200 rounded p-2 text-center\">\n            <span className=\"font-medium\">Rooms {pct.roomRange}</span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;;AAUO,SAAS,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAgB;IAC/D,MAAM,mBAAmB,CAAC;QACxB,SAAS;YAAE,MAAM,EAAE,MAAM,CAAC,KAAK;QAAC;IAClC;IAEA,MAAM,sBAAsB,CAAC;QAC3B,SAAS;YAAE,eAAe,EAAE,MAAM,CAAC,KAAK;QAAC;IAC3C;IAEA,MAAM,qBAAqB,CAAC;QAC1B,SAAS;YAAE,YAAY,EAAE,MAAM,CAAC,KAAK;QAAC;IACxC;IAEA,MAAM,wBAAwB,CAAC;QAC7B,SAAS;YAAE,WAAW,EAAE,MAAM,CAAC,KAAK;QAAC;IACvC;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAmB;;;;;;0BAGjC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAA8B;;;;;;4BAC9C,yBACC,8OAAC;gCACC,MAAK;gCACL,OAAO,IAAI,IAAI;gCACf,UAAU;gCACV,WAAU;;;;;qDAGZ,8OAAC;gCAAE,WAAU;0CAAe,IAAI,IAAI,IAAI;;;;;;;;;;;;kCAI5C,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAA8B;;;;;;4BAC9C,yBACC,8OAAC;gCACC,MAAK;gCACL,OAAO,IAAI,aAAa;gCACxB,UAAU;gCACV,WAAU;;;;;qDAGZ,8OAAC;gCAAE,WAAU;0CAAW,IAAI,aAAa,IAAI;;;;;;;;;;;;kCAIjD,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAA8B;;;;;;4BAC9C,yBACC,8OAAC;gCACC,MAAK;gCACL,OAAO,IAAI,UAAU;gCACrB,UAAU;gCACV,WAAU;;;;;qDAGZ,8OAAC;gCAAE,WAAU;0CAAW,IAAI,UAAU,IAAI;;;;;;;;;;;;;;;;;;0BAMhD,8OAAC;;kCACC,8OAAC;wBAAM,WAAU;kCAAmC;;;;;;oBACnD,yBACC,8OAAC;wBACC,MAAK;wBACL,OAAO,IAAI,SAAS;wBACpB,UAAU;wBACV,WAAU;wBACV,aAAY;;;;;6CAGd,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAK,WAAU;;gCAAc;gCAAO,IAAI,SAAS;;;;;;;;;;;;;;;;;;;;;;;;AAM9D","debugId":null}},
    {"offset": {"line": 1383, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/unitview_firebase/src/components/shared/staff-card.tsx"],"sourcesContent":["'use client';\n\nimport { StaffMember } from '@/lib/firebase';\n\ninterface StaffCardProps {\n  title: string;\n  staffMember: StaffMember;\n  onUpdate: (data: Partial<StaffMember>) => void;\n  editMode: boolean;\n  size?: 'small' | 'normal';\n}\n\nexport function StaffCard({ \n  title, \n  staffMember, \n  onUpdate, \n  editMode,\n  size = 'normal'\n}: StaffCardProps) {\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onUpdate({ name: e.target.value });\n  };\n  \n  const handleSpectraChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onUpdate({ spectraNumber: e.target.value });\n  };\n  \n  return (\n    <div className={`border ${\n      title === 'Charge Nurse' ? 'border-purple-200' : 'border-yellow-200'\n    } rounded-lg p-4 ${\n      size === 'small' ? 'col-span-1' : 'col-span-1 md:col-span-2'\n    }`}>\n      <h4 className=\"font-medium mb-3\">{title}</h4>\n      \n      <div className=\"space-y-2\">\n        <div>\n          <label className=\"block text-xs text-gray-500\">Name</label>\n          {editMode ? (\n            <input\n              type=\"text\"\n              value={staffMember.name}\n              onChange={handleNameChange}\n              className=\"w-full p-1 border rounded text-sm\"\n            />\n          ) : (\n            <p className=\"font-medium\">{staffMember.name || 'Unassigned'}</p>\n          )}\n        </div>\n        \n        <div>\n          <label className=\"block text-xs text-gray-500\">Spectra #</label>\n          {editMode ? (\n            <input\n              type=\"text\"\n              value={staffMember.spectraNumber}\n              onChange={handleSpectraChange}\n              className=\"w-full p-1 border rounded text-sm\"\n            />\n          ) : (\n            <p className=\"text-sm\">{staffMember.spectraNumber || 'N/A'}</p>\n          )}\n        </div>\n      </div>\n      \n      {staffMember.role === 'chargeNurse' && (\n        <div className=\"mt-3 pt-2 border-t border-purple-100\">\n          <span className=\"text-xs bg-purple-100 text-purple-800 px-2 py-1 rounded-full\">\n            Unit Supervisor\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;;AAYO,SAAS,UAAU,EACxB,KAAK,EACL,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,OAAO,QAAQ,EACA;IACf,MAAM,mBAAmB,CAAC;QACxB,SAAS;YAAE,MAAM,EAAE,MAAM,CAAC,KAAK;QAAC;IAClC;IAEA,MAAM,sBAAsB,CAAC;QAC3B,SAAS;YAAE,eAAe,EAAE,MAAM,CAAC,KAAK;QAAC;IAC3C;IAEA,qBACE,8OAAC;QAAI,WAAW,CAAC,OAAO,EACtB,UAAU,iBAAiB,sBAAsB,oBAClD,gBAAgB,EACf,SAAS,UAAU,eAAe,4BAClC;;0BACA,8OAAC;gBAAG,WAAU;0BAAoB;;;;;;0BAElC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAA8B;;;;;;4BAC9C,yBACC,8OAAC;gCACC,MAAK;gCACL,OAAO,YAAY,IAAI;gCACvB,UAAU;gCACV,WAAU;;;;;qDAGZ,8OAAC;gCAAE,WAAU;0CAAe,YAAY,IAAI,IAAI;;;;;;;;;;;;kCAIpD,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAA8B;;;;;;4BAC9C,yBACC,8OAAC;gCACC,MAAK;gCACL,OAAO,YAAY,aAAa;gCAChC,UAAU;gCACV,WAAU;;;;;qDAGZ,8OAAC;gCAAE,WAAU;0CAAW,YAAY,aAAa,IAAI;;;;;;;;;;;;;;;;;;YAK1D,YAAY,IAAI,KAAK,+BACpB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAK,WAAU;8BAA+D;;;;;;;;;;;;;;;;;AAOzF","debugId":null}},
    {"offset": {"line": 1634, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/unitview_firebase/src/lib/firebase-config.ts"],"sourcesContent":["import { initializeApp, getApps } from 'firebase/app';\nimport {\n  getFirestore,\n  enableIndexedDbPersistence,\n  CACHE_SIZE_UNLIMITED,\n  persistentLocalCache,\n  persistentSingleTabManager\n} from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\nimport { getAuth } from 'firebase/auth';\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyARvbAJtv-NBJnJQ3EdZNU3WsMnXThFzhM\",\n  authDomain: \"unitview.firebaseapp.com\",\n  databaseURL: \"https://unitview-default-rtdb.firebaseio.com\",\n  projectId: \"unitview\",\n  storageBucket: \"unitview.firebasestorage.app\",\n  messagingSenderId: \"185648925766\",\n  appId: \"1:185648925766:web:5ae6271dd4977f6e158e47\"\n};\n\n// Initialize Firebase\nconst app = getApps().length === 0 ? initializeApp(firebaseConfig) : getApps()[0];\n\n// Initialize Firestore\nconst db = getFirestore(app);\n\n// Enable offline persistence (will use the cache when offline)\ntry {\n  enableIndexedDbPersistence(db).catch((err) => {\n    console.error(\"Firestore persistence error:\", err);\n  });\n} catch (error) {\n  console.warn(\"Firestore persistence already enabled or not supported\");\n}\n\nconst storage = getStorage(app);\nconst auth = getAuth(app);\n\nexport { app, db, storage, auth };\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;;;;;AAEA,yBAAyB;AACzB,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,aAAa;IACb,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;AACT;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,gLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,IAAI,CAAA,GAAA,gLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,gLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;AAEjF,uBAAuB;AACvB,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;AAExB,+DAA+D;AAC/D,IAAI;IACF,CAAA,GAAA,iKAAA,CAAA,6BAA0B,AAAD,EAAE,IAAI,KAAK,CAAC,CAAC;QACpC,QAAQ,KAAK,CAAC,gCAAgC;IAChD;AACF,EAAE,OAAO,OAAO;IACd,QAAQ,IAAI,CAAC;AACf;AAEA,MAAM,UAAU,CAAA,GAAA,oLAAA,CAAA,aAAU,AAAD,EAAE;AAC3B,MAAM,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 1683, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/unitview_firebase/src/lib/firebase-optimized.ts"],"sourcesContent":["import { app, db, storage, auth } from './firebase-config';\nimport { collection, doc, setDoc, getDoc, getDocs, updateDoc, deleteDoc, query, where, DocumentData, writeBatch } from 'firebase/firestore';\n\n// Unit Types\nexport interface Unit {\n  id: string;\n  designation: string;\n  roomCount: number;\n  roomRanges: string[];\n  nurseCardCount: number;\n  pctCardCount: number;\n  hasChargeNurse: boolean;\n  hasUnitClerk: boolean;\n  createdAt?: number;\n  updatedAt?: number;\n}\n\n// Patient Types\nexport interface Patient {\n  id: string;\n  unitId: string;\n  roomNumber: string;\n  name: string;\n  acuity: number;\n  assigned: boolean;\n  notes?: string;\n  createdAt?: number;\n  updatedAt?: number;\n}\n\n// Staff Types\nexport interface Nurse {\n  id: string;\n  unitId: string;\n  name: string;\n  spectraNumber: string;\n  reliefName: string;\n  assignedRooms: string[];\n  acuityCapacity: number;\n  createdAt?: number;\n  updatedAt?: number;\n}\n\nexport interface PCT {\n  id: string;\n  unitId: string;\n  name: string;\n  spectraNumber: string;\n  reliefName: string;\n  roomRange: string;\n  createdAt?: number;\n  updatedAt?: number;\n}\n\nexport interface StaffMember {\n  id: string;\n  unitId: string;\n  name: string;\n  spectraNumber: string;\n  role: 'chargeNurse' | 'unitClerk';\n  createdAt?: number;\n  updatedAt?: number;\n}\n\nexport interface Module {\n  id: string;\n  name: string;\n  description: string;\n  enabled: boolean;\n  updatedAt?: number;\n}\n\n// Firebase Collection References\nconst unitsCollection = collection(db, 'units');\nconst patientsCollection = collection(db, 'patients');\nconst nursesCollection = collection(db, 'nurses');\nconst pctsCollection = collection(db, 'pcts');\nconst staffCollection = collection(db, 'staff');\nconst modulesCollection = collection(db, 'modules');\n\n// Cache for units data\nlet unitsCache: Unit[] | null = null;\nlet unitDataCache: Map<string, {\n  unit: Unit | null,\n  patients: Patient[],\n  nurses: Nurse[],\n  pcts: PCT[],\n  chargeNurse: StaffMember | null,\n  unitClerk: StaffMember | null\n}> = new Map();\n\n// Unit Functions\nexport async function createUnit(unitData: Omit<Unit, 'id' | 'createdAt' | 'updatedAt'>): Promise<Unit> {\n  const timestamp = Date.now();\n  const unitRef = doc(unitsCollection);\n  const newUnit: Unit = {\n    ...unitData,\n    id: unitRef.id,\n    createdAt: timestamp,\n    updatedAt: timestamp\n  };\n  \n  await setDoc(unitRef, newUnit);\n  \n  // Update cache\n  if (unitsCache) {\n    unitsCache.push(newUnit);\n  }\n  \n  return newUnit;\n}\n\nexport async function getUnits(): Promise<Unit[]> {\n  // Return from cache if available\n  if (unitsCache) {\n    return unitsCache;\n  }\n  \n  const snapshot = await getDocs(unitsCollection);\n  const units = snapshot.docs.map(doc => doc.data() as Unit);\n  \n  // Update cache\n  unitsCache = units;\n  \n  return units;\n}\n\nexport async function getUnit(unitId: string): Promise<Unit | null> {\n  // Check cache first\n  const cachedData = unitDataCache.get(unitId);\n  if (cachedData?.unit) {\n    return cachedData.unit;\n  }\n  \n  const unitRef = doc(unitsCollection, unitId);\n  const unitSnap = await getDoc(unitRef);\n  \n  if (unitSnap.exists()) {\n    const unit = unitSnap.data() as Unit;\n    \n    // Update cache\n    if (!unitDataCache.has(unitId)) {\n      unitDataCache.set(unitId, {\n        unit,\n        patients: [],\n        nurses: [],\n        pcts: [],\n        chargeNurse: null,\n        unitClerk: null\n      });\n    } else {\n      unitDataCache.get(unitId)!.unit = unit;\n    }\n    \n    return unit;\n  }\n  \n  return null;\n}\n\nexport async function updateUnit(unitId: string, data: Partial<Unit>): Promise<void> {\n  const unitRef = doc(unitsCollection, unitId);\n  const updateData = {\n    ...data,\n    updatedAt: Date.now()\n  };\n  \n  await updateDoc(unitRef, updateData);\n  \n  // Update cache\n  if (unitsCache) {\n    const index = unitsCache.findIndex(u => u.id === unitId);\n    if (index !== -1) {\n      unitsCache[index] = { ...unitsCache[index], ...updateData };\n    }\n  }\n  \n  if (unitDataCache.has(unitId) && unitDataCache.get(unitId)!.unit) {\n    unitDataCache.get(unitId)!.unit = { \n      ...unitDataCache.get(unitId)!.unit!, \n      ...updateData \n    };\n  }\n}\n\nexport async function deleteUnit(unitId: string): Promise<void> {\n  const unitRef = doc(unitsCollection, unitId);\n  await deleteDoc(unitRef);\n  \n  // Delete related data\n  await deleteUnitPatients(unitId);\n  await deleteUnitNurses(unitId);\n  await deleteUnitPCTs(unitId);\n  await deleteUnitStaff(unitId);\n  \n  // Update cache\n  if (unitsCache) {\n    unitsCache = unitsCache.filter(u => u.id !== unitId);\n  }\n  \n  unitDataCache.delete(unitId);\n}\n\n// Patient Functions\nexport async function createPatient(patientData: Omit<Patient, 'id' | 'createdAt' | 'updatedAt'>): Promise<Patient> {\n  const timestamp = Date.now();\n  const patientRef = doc(patientsCollection);\n  const newPatient: Patient = {\n    ...patientData,\n    id: patientRef.id,\n    createdAt: timestamp,\n    updatedAt: timestamp\n  };\n  \n  await setDoc(patientRef, newPatient);\n  \n  // Update cache\n  if (unitDataCache.has(patientData.unitId)) {\n    unitDataCache.get(patientData.unitId)!.patients.push(newPatient);\n  }\n  \n  return newPatient;\n}\n\n// Batch create patients for better performance\nexport async function batchCreatePatients(patientsData: Omit<Patient, 'id' | 'createdAt' | 'updatedAt'>[]): Promise<Patient[]> {\n  const timestamp = Date.now();\n  const batch = writeBatch(db);\n  const newPatients: Patient[] = [];\n  \n  for (const patientData of patientsData) {\n    const patientRef = doc(patientsCollection);\n    const newPatient: Patient = {\n      ...patientData,\n      id: patientRef.id,\n      createdAt: timestamp,\n      updatedAt: timestamp\n    };\n    \n    batch.set(patientRef, newPatient);\n    newPatients.push(newPatient);\n    \n    // Update cache\n    if (unitDataCache.has(patientData.unitId)) {\n      unitDataCache.get(patientData.unitId)!.patients.push(newPatient);\n    }\n  }\n  \n  await batch.commit();\n  return newPatients;\n}\n\nexport async function getPatientsByUnit(unitId: string): Promise<Patient[]> {\n  // Check cache first\n  const cachedData = unitDataCache.get(unitId);\n  if (cachedData?.patients.length > 0) {\n    return cachedData.patients;\n  }\n  \n  const q = query(patientsCollection, where('unitId', '==', unitId));\n  const snapshot = await getDocs(q);\n  const patients = snapshot.docs.map(doc => doc.data() as Patient);\n  \n  // Update cache\n  if (!unitDataCache.has(unitId)) {\n    unitDataCache.set(unitId, {\n      unit: null,\n      patients,\n      nurses: [],\n      pcts: [],\n      chargeNurse: null,\n      unitClerk: null\n    });\n  } else {\n    unitDataCache.get(unitId)!.patients = patients;\n  }\n  \n  return patients;\n}\n\nexport async function updatePatient(patientId: string, data: Partial<Patient>): Promise<void> {\n  const patientRef = doc(patientsCollection, patientId);\n  const updateData = {\n    ...data,\n    updatedAt: Date.now()\n  };\n  \n  await updateDoc(patientRef, updateData);\n  \n  // Update cache\n  for (const [unitId, cachedData] of unitDataCache.entries()) {\n    const index = cachedData.patients.findIndex(p => p.id === patientId);\n    if (index !== -1) {\n      cachedData.patients[index] = { ...cachedData.patients[index], ...updateData };\n      break;\n    }\n  }\n}\n\n// Batch update patients for better performance\nexport async function batchUpdatePatients(updates: { id: string, data: Partial<Patient> }[]): Promise<void> {\n  const batch = writeBatch(db);\n  const timestamp = Date.now();\n  \n  for (const { id, data } of updates) {\n    const patientRef = doc(patientsCollection, id);\n    batch.update(patientRef, { ...data, updatedAt: timestamp });\n    \n    // Update cache\n    for (const [unitId, cachedData] of unitDataCache.entries()) {\n      const index = cachedData.patients.findIndex(p => p.id === id);\n      if (index !== -1) {\n        cachedData.patients[index] = { \n          ...cachedData.patients[index], \n          ...data,\n          updatedAt: timestamp\n        };\n        break;\n      }\n    }\n  }\n  \n  await batch.commit();\n}\n\nexport async function deletePatient(patientId: string): Promise<void> {\n  const patientRef = doc(patientsCollection, patientId);\n  await deleteDoc(patientRef);\n  \n  // Update cache\n  for (const [unitId, cachedData] of unitDataCache.entries()) {\n    cachedData.patients = cachedData.patients.filter(p => p.id !== patientId);\n  }\n}\n\nexport async function deleteUnitPatients(unitId: string): Promise<void> {\n  const q = query(patientsCollection, where('unitId', '==', unitId));\n  const snapshot = await getDocs(q);\n  \n  const batch = writeBatch(db);\n  snapshot.docs.forEach(doc => {\n    batch.delete(doc.ref);\n  });\n  \n  await batch.commit();\n  \n  // Update cache\n  if (unitDataCache.has(unitId)) {\n    unitDataCache.get(unitId)!.patients = [];\n  }\n}\n\n// Nurse Functions\nexport async function createNurse(nurseData: Omit<Nurse, 'id' | 'createdAt' | 'updatedAt'>): Promise<Nurse> {\n  const timestamp = Date.now();\n  const nurseRef = doc(nursesCollection);\n  const newNurse: Nurse = {\n    ...nurseData,\n    id: nurseRef.id,\n    createdAt: timestamp,\n    updatedAt: timestamp\n  };\n  \n  await setDoc(nurseRef, newNurse);\n  \n  // Update cache\n  if (unitDataCache.has(nurseData.unitId)) {\n    unitDataCache.get(nurseData.unitId)!.nurses.push(newNurse);\n  }\n  \n  return newNurse;\n}\n\n// Batch create nurses for better performance\nexport async function batchCreateNurses(nursesData: Omit<Nurse, 'id' | 'createdAt' | 'updatedAt'>[]): Promise<Nurse[]> {\n  const timestamp = Date.now();\n  const batch = writeBatch(db);\n  const newNurses: Nurse[] = [];\n  \n  for (const nurseData of nursesData) {\n    const nurseRef = doc(nursesCollection);\n    const newNurse: Nurse = {\n      ...nurseData,\n      id: nurseRef.id,\n      createdAt: timestamp,\n      updatedAt: timestamp\n    };\n    \n    batch.set(nurseRef, newNurse);\n    newNurses.push(newNurse);\n    \n    // Update cache\n    if (unitDataCache.has(nurseData.unitId)) {\n      unitDataCache.get(nurseData.unitId)!.nurses.push(newNurse);\n    }\n  }\n  \n  await batch.commit();\n  return newNurses;\n}\n\nexport async function getNursesByUnit(unitId: string): Promise<Nurse[]> {\n  // Check cache first\n  const cachedData = unitDataCache.get(unitId);\n  if (cachedData?.nurses.length > 0) {\n    return cachedData.nurses;\n  }\n  \n  const q = query(nursesCollection, where('unitId', '==', unitId));\n  const snapshot = await getDocs(q);\n  const nurses = snapshot.docs.map(doc => doc.data() as Nurse);\n  \n  // Update cache\n  if (!unitDataCache.has(unitId)) {\n    unitDataCache.set(unitId, {\n      unit: null,\n      patients: [],\n      nurses,\n      pcts: [],\n      chargeNurse: null,\n      unitClerk: null\n    });\n  } else {\n    unitDataCache.get(unitId)!.nurses = nurses;\n  }\n  \n  return nurses;\n}\n\nexport async function updateNurse(nurseId: string, data: Partial<Nurse>): Promise<void> {\n  const nurseRef = doc(nursesCollection, nurseId);\n  const updateData = {\n    ...data,\n    updatedAt: Date.now()\n  };\n  \n  await updateDoc(nurseRef, updateData);\n  \n  // Update cache\n  for (const [unitId, cachedData] of unitDataCache.entries()) {\n    const index = cachedData.nurses.findIndex(n => n.id === nurseId);\n    if (index !== -1) {\n      cachedData.nurses[index] = { ...cachedData.nurses[index], ...updateData };\n      break;\n    }\n  }\n}\n\nexport async function deleteNurse(nurseId: string): Promise<void> {\n  const nurseRef = doc(nursesCollection, nurseId);\n  await deleteDoc(nurseRef);\n  \n  // Update cache\n  for (const [unitId, cachedData] of unitDataCache.entries()) {\n    cachedData.nurses = cachedData.nurses.filter(n => n.id !== nurseId);\n  }\n}\n\nexport async function deleteUnitNurses(unitId: string): Promise<void> {\n  const q = query(nursesCollection, where('unitId', '==', unitId));\n  const snapshot = await getDocs(q);\n  \n  const batch = writeBatch(db);\n  snapshot.docs.forEach(doc => {\n    batch.delete(doc.ref);\n  });\n  \n  await batch.commit();\n  \n  // Update cache\n  if (unitDataCache.has(unitId)) {\n    unitDataCache.get(unitId)!.nurses = [];\n  }\n}\n\n// PCT Functions\nexport async function createPCT(pctData: Omit<PCT, 'id' | 'createdAt' | 'updatedAt'>): Promise<PCT> {\n  const timestamp = Date.now();\n  const pctRef = doc(pctsCollection);\n  const newPCT: PCT = {\n    ...pctData,\n    id: pctRef.id,\n    createdAt: timestamp,\n    updatedAt: timestamp\n  };\n  \n  await setDoc(pctRef, newPCT);\n  \n  // Update cache\n  if (unitDataCache.has(pctData.unitId)) {\n    unitDataCache.get(pctData.unitId)!.pcts.push(newPCT);\n  }\n  \n  return newPCT;\n}\n\n// Batch create PCTs for better performance\nexport async function batchCreatePCTs(pctsData: Omit<PCT, 'id' | 'createdAt' | 'updatedAt'>[]): Promise<PCT[]> {\n  const timestamp = Date.now();\n  const batch = writeBatch(db);\n  const newPCTs: PCT[] = [];\n  \n  for (const pctData of pctsData) {\n    const pctRef = doc(pctsCollection);\n    const newPCT: PCT = {\n      ...pctData,\n      id: pctRef.id,\n      createdAt: timestamp,\n      updatedAt: timestamp\n    };\n    \n    batch.set(pctRef, newPCT);\n    newPCTs.push(newPCT);\n    \n    // Update cache\n    if (unitDataCache.has(pctData.unitId)) {\n      unitDataCache.get(pctData.unitId)!.pcts.push(newPCT);\n    }\n  }\n  \n  await batch.commit();\n  return newPCTs;\n}\n\nexport async function getPCTsByUnit(unitId: string): Promise<PCT[]> {\n  // Check cache first\n  const cachedData = unitDataCache.get(unitId);\n  if (cachedData?.pcts.length > 0) {\n    return cachedData.pcts;\n  }\n  \n  const q = query(pctsCollection, where('unitId', '==', unitId));\n  const snapshot = await getDocs(q);\n  const pcts = snapshot.docs.map(doc => doc.data() as PCT);\n  \n  // Update cache\n  if (!unitDataCache.has(unitId)) {\n    unitDataCache.set(unitId, {\n      unit: null,\n      patients: [],\n      nurses: [],\n      pcts,\n      chargeNurse: null,\n      unitClerk: null\n    });\n  } else {\n    unitDataCache.get(unitId)!.pcts = pcts;\n  }\n  \n  return pcts;\n}\n\nexport async function updatePCT(pctId: string, data: Partial<PCT>): Promise<void> {\n  const pctRef = doc(pctsCollection, pctId);\n  const updateData = {\n    ...data,\n    updatedAt: Date.now()\n  };\n  \n  await updateDoc(pctRef, updateData);\n  \n  // Update cache\n  for (const [unitId, cachedData] of unitDataCache.entries()) {\n    const index = cachedData.pcts.findIndex(p => p.id === pctId);\n    if (index !== -1) {\n      cachedData.pcts[index] = { ...cachedData.pcts[index], ...updateData };\n      break;\n    }\n  }\n}\n\nexport async function deletePCT(pctId: string): Promise<void> {\n  const pctRef = doc(pctsCollection, pctId);\n  await deleteDoc(pctRef);\n  \n  // Update cache\n  for (const [unitId, cachedData] of unitDataCache.entries()) {\n    cachedData.pcts = cachedData.pcts.filter(p => p.id !== pctId);\n  }\n}\n\nexport async function deleteUnitPCTs(unitId: string): Promise<void> {\n  const q = query(pctsCollection, where('unitId', '==', unitId));\n  const snapshot = await getDocs(q);\n  \n  const batch = writeBatch(db);\n  snapshot.docs.forEach(doc => {\n    batch.delete(doc.ref);\n  });\n  \n  await batch.commit();\n  \n  // Update cache\n  if (unitDataCache.has(unitId)) {\n    unitDataCache.get(unitId)!.pcts = [];\n  }\n}\n\n// Staff Functions\nexport async function createStaffMember(staffData: Omit<StaffMember, 'id' | 'createdAt' | 'updatedAt'>): Promise<StaffMember> {\n  const timestamp = Date.now();\n  const staffRef = doc(staffCollection);\n  const newStaff: StaffMember = {\n    ...staffData,\n    id: staffRef.id,\n    createdAt: timestamp,\n    updatedAt: timestamp\n  };\n  \n  await setDoc(staffRef, newStaff);\n  \n  // Update cache\n  if (unitDataCache.has(staffData.unitId)) {\n    if (staffData.role === 'chargeNurse') {\n      unitDataCache.get(staffData.unitId)!.chargeNurse = newStaff;\n    } else if (staffData.role === 'unitClerk') {\n      unitDataCache.get(staffData.unitId)!.unitClerk = newStaff;\n    }\n  }\n  \n  return newStaff;\n}\n\n// Batch create staff members for better performance\nexport async function batchCreateStaffMembers(staffData: Omit<StaffMember, 'id' | 'createdAt' | 'updatedAt'>[]): Promise<StaffMember[]> {\n  const timestamp = Date.now();\n  const batch = writeBatch(db);\n  const newStaffMembers: StaffMember[] = [];\n  \n  for (const staffMemberData of staffData) {\n    const staffRef = doc(staffCollection);\n    const newStaff: StaffMember = {\n      ...staffMemberData,\n      id: staffRef.id,\n      createdAt: timestamp,\n      updatedAt: timestamp\n    };\n    \n    batch.set(staffRef, newStaff);\n    newStaffMembers.push(newStaff);\n    \n    // Update cache\n    if (unitDataCache.has(staffMemberData.unitId)) {\n      if (staffMemberData.role === 'chargeNurse') {\n        unitDataCache.get(staffMemberData.unitId)!.chargeNurse = newStaff;\n      } else if (staffMemberData.role === 'unitClerk') {\n        unitDataCache.get(staffMemberData.unitId)!.unitClerk = newStaff;\n      }\n    }\n  }\n  \n  await batch.commit();\n  return newStaffMembers;\n}\n\nexport async function getStaffByUnit(unitId: string): Promise<StaffMember[]> {\n  const q = query(staffCollection, where('unitId', '==', unitId));\n  const snapshot = await getDocs(q);\n  return snapshot.docs.map(doc => doc.data() as StaffMember);\n}\n\nexport async function getStaffByUnitAndRole(unitId: string, role: 'chargeNurse' | 'unitClerk'): Promise<StaffMember | null> {\n  // Check cache first\n  const cachedData = unitDataCache.get(unitId);\n  if (role === 'chargeNurse' && cachedData?.chargeNurse) {\n    return cachedData.chargeNurse;\n  } else if (role === 'unitClerk' && cachedData?.unitClerk) {\n    return cachedData.unitClerk;\n  }\n  \n  const q = query(staffCollection, where('unitId', '==', unitId), where('role', '==', role));\n  const snapshot = await getDocs(q);\n  \n  if (snapshot.empty) {\n    return null;\n  }\n  \n  const staffMember = snapshot.docs[0].data() as StaffMember;\n  \n  // Update cache\n  if (!unitDataCache.has(unitId)) {\n    unitDataCache.set(unitId, {\n      unit: null,\n      patients: [],\n      nurses: [],\n      pcts: [],\n      chargeNurse: role === 'chargeNurse' ? staffMember : null,\n      unitClerk: role === 'unitClerk' ? staffMember : null\n    });\n  } else {\n    if (role === 'chargeNurse') {\n      unitDataCache.get(unitId)!.chargeNurse = staffMember;\n    } else if (role === 'unitClerk') {\n      unitDataCache.get(unitId)!.unitClerk = staffMember;\n    }\n  }\n  \n  return staffMember;\n}\n\nexport async function updateStaffMember(staffId: string, data: Partial<StaffMember>): Promise<void> {\n  const staffRef = doc(staffCollection, staffId);\n  const updateData = {\n    ...data,\n    updatedAt: Date.now()\n  };\n  \n  await updateDoc(staffRef, updateData);\n  \n  // Update cache\n  for (const [unitId, cachedData] of unitDataCache.entries()) {\n    if (cachedData.chargeNurse?.id === staffId) {\n      cachedData.chargeNurse = { ...cachedData.chargeNurse, ...updateData };\n    } else if (cachedData.unitClerk?.id === staffId) {\n      cachedData.unitClerk = { ...cachedData.unitClerk, ...updateData };\n    }\n  }\n}\n\nexport async function deleteStaffMember(staffId: string): Promise<void> {\n  const staffRef = doc(staffCollection, staffId);\n  await deleteDoc(staffRef);\n  \n  // Update cache\n  for (const [unitId, cachedData] of unitDataCache.entries()) {\n    if (cachedData.chargeNurse?.id === staffId) {\n      cachedData.chargeNurse = null;\n    } else if (cachedData.unitClerk?.id === staffId) {\n      cachedData.unitClerk = null;\n    }\n  }\n}\n\nexport async function deleteUnitStaff(unitId: string): Promise<void> {\n  const q = query(staffCollection, where('unitId', '==', unitId));\n  const snapshot = await getDocs(q);\n  \n  const batch = writeBatch(db);\n  snapshot.docs.forEach(doc => {\n    batch.delete(doc.ref);\n  });\n  \n  await batch.commit();\n  \n  // Update cache\n  if (unitDataCache.has(unitId)) {\n    unitDataCache.get(unitId)!.chargeNurse = null;\n    unitDataCache.get(unitId)!.unitClerk = null;\n  }\n}\n\n// Module Functions\nexport async function getModules(): Promise<Module[]> {\n  const snapshot = await getDocs(modulesCollection);\n  return snapshot.docs.map(doc => doc.data() as Module);\n}\n\nexport async function updateModule(moduleId: string, enabled: boolean): Promise<void> {\n  const moduleRef = doc(modulesCollection, moduleId);\n  await updateDoc(moduleRef, {\n    enabled,\n    updatedAt: Date.now()\n  });\n}\n\nexport async function initializeModules(modules: Omit<Module, 'updatedAt'>[]): Promise<void> {\n  const timestamp = Date.now();\n  const batch = writeBatch(db);\n  \n  for (const module of modules) {\n    const moduleRef = doc(modulesCollection, module.id);\n    const moduleSnap = await getDoc(moduleRef);\n    \n    if (!moduleSnap.exists()) {\n      batch.set(moduleRef, {\n        ...module,\n        updatedAt: timestamp\n      });\n    }\n  }\n  \n  await batch.commit();\n}\n\n// Initialize default modules if they don't exist\nexport async function setupDefaultModules(): Promise<void> {\n  const defaultModules: Omit<Module, 'updatedAt'>[] = [\n    { id: 'mock-patient', name: 'Mock Patient Data', description: 'Generate mock patient data for testing', enabled: true },\n    { id: 'spectra-pool', name: 'Spectra Pool Management', description: 'Manage spectra pool assignments', enabled: false },\n    { id: 'acuity-tracking', name: 'Acuity Tracking', description: 'Track and manage patient acuity levels', enabled: true },\n    { id: 'bed-management', name: 'Bed Management', description: 'Track bed availability and assignments', enabled: true },\n    { id: 'staff-messaging', name: 'Staff Messaging', description: 'Internal messaging system for staff', enabled: false }\n  ];\n  \n  await initializeModules(defaultModules);\n}\n\n// Optimized function to load all unit data at once\nexport async function loadUnitData(unitId: string): Promise<{\n  unit: Unit | null,\n  patients: Patient[],\n  nurses: Nurse[],\n  pcts: PCT[],\n  chargeNurse: StaffMember | null,\n  unitClerk: StaffMember | null\n}> {\n  // Check cache first\n  if (unitDataCache.has(unitId)) {\n    const cachedData = unitDataCache.get(unitId)!;\n    \n    // If we have complete data in cache, return it\n    if (cachedData.unit && \n        (cachedData.patients.length > 0 || \n         cachedData.nurses.length > 0 || \n         cachedData.pcts.length > 0)) {\n      return cachedData;\n    }\n  }\n  \n  // Load all data in parallel\n  const [unit, patients, nurses, pcts, staffMembers] = await Promise.all([\n    getUnit(unitId),\n    getPatientsByUnit(unitId),\n    getNursesByUnit(unitId),\n    getPCTsByUnit(unitId),\n    getStaffByUnit(unitId)\n  ]);\n  \n  // Process staff members\n  let chargeNurse: StaffMember | null = null;\n  let unitClerk: StaffMember | null = null;\n  \n  for (const staff of staffMembers) {\n    if (staff.role === 'chargeNurse') {\n      chargeNurse = staff;\n    } else if (staff.role === 'unitClerk') {\n      unitClerk = staff;\n    }\n  }\n  \n  // Update cache\n  const unitData = {\n    unit,\n    patients,\n    nurses,\n    pcts,\n    chargeNurse,\n    unitClerk\n  };\n  \n  unitDataCache.set(unitId, unitData);\n  \n  return unitData;\n}\n\n// Optimized function to initialize unit data with batch operations\nexport async function initializeUnitData(unit: Unit): Promise<{\n  patients: Patient[],\n  nurses: Nurse[],\n  pcts: PCT[],\n  chargeNurse: StaffMember | null,\n  unitClerk: StaffMember | null\n}> {\n  // Generate all the data first\n  const patientsData: Omit<Patient, 'id' | 'createdAt' | 'updatedAt'>[] = [];\n  const nursesData: Omit<Nurse, 'id' | 'createdAt' | 'updatedAt'>[] = [];\n  const pctsData: Omit<PCT, 'id' | 'createdAt' | 'updatedAt'>[] = [];\n  const staffData: Omit<StaffMember, 'id' | 'createdAt' | 'updatedAt'>[] = [];\n  \n  // Generate patient data\n  for (const range of unit.roomRanges) {\n    const [start, end] = range.split('-').map(num => parseInt(num, 10));\n    for (let roomNum = start; roomNum <= end; roomNum++) {\n      patientsData.push({\n        unitId: unit.id,\n        roomNumber: roomNum.toString(),\n        name: '',\n        acuity: Math.floor(Math.random() * 5) + 1, // Random acuity 1-5\n        assigned: false\n      });\n    }\n  }\n  \n  // Generate nurse data\n  for (let i = 0; i < unit.nurseCardCount; i++) {\n    nursesData.push({\n      unitId: unit.id,\n      name: `Nurse ${i + 1}`,\n      spectraNumber: `SN${10000 + i}`,\n      reliefName: '',\n      assignedRooms: [],\n      acuityCapacity: 12\n    });\n  }\n  \n  // Generate PCT data\n  for (let i = 0; i < unit.pctCardCount; i++) {\n    // Divide room ranges among PCTs\n    const rangeIndex = i % unit.roomRanges.length;\n    const [start, end] = unit.roomRanges[rangeIndex].split('-').map(num => parseInt(num, 10));\n    const rangeSize = end - start + 1;\n    const pctRangeSize = Math.ceil(rangeSize / unit.pctCardCount);\n    \n    const pctStart = start + (i * pctRangeSize);\n    const pctEnd = Math.min(pctStart + pctRangeSize - 1, end);\n    \n    pctsData.push({\n      unitId: unit.id,\n      name: `PCT ${i + 1}`,\n      spectraNumber: `PCT${10000 + i}`,\n      reliefName: '',\n      roomRange: `${pctStart}-${pctEnd}`\n    });\n  }\n  \n  // Generate staff data\n  if (unit.hasChargeNurse) {\n    staffData.push({\n      unitId: unit.id,\n      name: '',\n      spectraNumber: '',\n      role: 'chargeNurse'\n    });\n  }\n  \n  if (unit.hasUnitClerk) {\n    staffData.push({\n      unitId: unit.id,\n      name: '',\n      spectraNumber: '',\n      role: 'unitClerk'\n    });\n  }\n  \n  // Create all data in parallel using batch operations\n  const [patients, nurses, pcts, staffMembers] = await Promise.all([\n    batchCreatePatients(patientsData),\n    batchCreateNurses(nursesData),\n    batchCreatePCTs(pctsData),\n    batchCreateStaffMembers(staffData)\n  ]);\n  \n  // Process staff members\n  let chargeNurse: StaffMember | null = null;\n  let unitClerk: StaffMember | null = null;\n  \n  for (const staff of staffMembers) {\n    if (staff.role === 'chargeNurse') {\n      chargeNurse = staff;\n    } else if (staff.role === 'unitClerk') {\n      unitClerk = staff;\n    }\n  }\n  \n  return {\n    patients,\n    nurses,\n    pcts,\n    chargeNurse,\n    unitClerk\n  };\n}\n\n// Clear cache (useful for testing or when user logs out)\nexport function clearCache(): void {\n  unitsCache = null;\n  unitDataCache.clear();\n}\n\nexport { app, db, storage, auth };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2502, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/unitview_firebase/src/components/shared/patient-grid.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useMemo, useCallback } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { NurseCard } from '@/components/shared/nurse-card';\nimport { PCTCard } from '@/components/shared/pct-card';\nimport { StaffCard } from '@/components/shared/staff-card';\nimport { \n  loadUnitData,\n  initializeUnitData,\n  updatePatient,\n  updateNurse,\n  updatePCT,\n  updateStaffMember,\n  batchUpdatePatients,\n  Unit,\n  Patient,\n  Nurse,\n  PCT,\n  StaffMember\n} from '@/lib/firebase-optimized';\nimport { toast } from '@/components/ui/use-toast';\n\ninterface PatientGridProps {\n  unitId: string;\n}\n\nexport function PatientGrid({ unitId }: PatientGridProps) {\n  const [unit, setUnit] = useState<Unit | null>(null);\n  const [patients, setPatients] = useState<Patient[]>([]);\n  const [nurses, setNurses] = useState<Nurse[]>([]);\n  const [pcts, setPCTs] = useState<PCT[]>([]);\n  const [chargeNurse, setChargeNurse] = useState<StaffMember | null>(null);\n  const [unitClerk, setUnitClerk] = useState<StaffMember | null>(null);\n  const [editMode, setEditMode] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [initializing, setInitializing] = useState(false);\n  const [pendingChanges, setPendingChanges] = useState<{\n    patients: { [id: string]: Partial<Patient> },\n    nurses: { [id: string]: Partial<Nurse> },\n    pcts: { [id: string]: Partial<PCT> },\n    staff: { [id: string]: Partial<StaffMember> }\n  }>({\n    patients: {},\n    nurses: {},\n    pcts: {},\n    staff: {}\n  });\n  \n  // Load unit data and associated staff/patients\n  useEffect(() => {\n    const loadData = async () => {\n      if (!unitId) return;\n      \n      try {\n        setLoading(true);\n        \n        // Load all unit data at once using the optimized function\n        const unitData = await loadUnitData(unitId);\n        \n        if (!unitData.unit) {\n          toast({\n            title: 'Error',\n            description: 'Unit not found',\n            variant: 'destructive',\n          });\n          return;\n        }\n        \n        setUnit(unitData.unit);\n        setPatients(unitData.patients);\n        setNurses(unitData.nurses);\n        setPCTs(unitData.pcts);\n        setChargeNurse(unitData.chargeNurse);\n        setUnitClerk(unitData.unitClerk);\n        \n        // If no data exists yet, we need to initialize the unit\n        if (unitData.patients.length === 0 && unitData.nurses.length === 0) {\n          setInitializing(true);\n          const initializedData = await initializeUnitData(unitData.unit);\n          setPatients(initializedData.patients);\n          setNurses(initializedData.nurses);\n          setPCTs(initializedData.pcts);\n          setChargeNurse(initializedData.chargeNurse);\n          setUnitClerk(initializedData.unitClerk);\n          setInitializing(false);\n          \n          toast({\n            title: 'Unit Initialized',\n            description: 'Unit data has been created successfully',\n          });\n        }\n      } catch (error) {\n        console.error('Error loading unit data:', error);\n        toast({\n          title: 'Error',\n          description: 'Failed to load unit data',\n          variant: 'destructive',\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadData();\n  }, [unitId]);\n  \n  // Memoized list of unassigned patients for better performance\n  const unassignedPatients = useMemo(() => {\n    return patients.filter(p => !p.assigned);\n  }, [patients]);\n  \n  // Optimistic UI update for patient assignment\n  const handleAssignPatient = useCallback(async (nurseId: string, patientId: string) => {\n    try {\n      // Find the nurse and patient\n      const nurse = nurses.find(n => n.id === nurseId);\n      const patient = patients.find(p => p.id === patientId);\n      \n      if (!nurse || !patient) return;\n      \n      // Update nurse assignments (optimistic update)\n      const updatedAssignedRooms = [...nurse.assignedRooms];\n      if (!updatedAssignedRooms.includes(patient.roomNumber)) {\n        updatedAssignedRooms.push(patient.roomNumber);\n        updatedAssignedRooms.sort((a, b) => parseInt(a) - parseInt(b));\n      }\n      \n      // Update local state immediately (optimistic update)\n      setNurses(nurses.map(n => \n        n.id === nurseId ? { ...n, assignedRooms: updatedAssignedRooms } : n\n      ));\n      \n      setPatients(patients.map(p => \n        p.id === patientId ? { ...p, assigned: true } : p\n      ));\n      \n      // Add to pending changes\n      setPendingChanges(prev => ({\n        ...prev,\n        nurses: {\n          ...prev.nurses,\n          [nurseId]: { assignedRooms: updatedAssignedRooms }\n        },\n        patients: {\n          ...prev.patients,\n          [patientId]: { assigned: true }\n        }\n      }));\n      \n      // Update in database\n      await Promise.all([\n        updateNurse(nurseId, { assignedRooms: updatedAssignedRooms }),\n        updatePatient(patientId, { assigned: true })\n      ]);\n      \n      // Clear from pending changes after successful update\n      setPendingChanges(prev => {\n        const { [nurseId]: _, ...remainingNurses } = prev.nurses;\n        const { [patientId]: __, ...remainingPatients } = prev.patients;\n        return {\n          ...prev,\n          nurses: remainingNurses,\n          patients: remainingPatients\n        };\n      });\n    } catch (error) {\n      console.error('Error assigning patient:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to assign patient. Changes will be saved when connection is restored.',\n        variant: 'destructive',\n      });\n    }\n  }, [nurses, patients]);\n  \n  // Optimistic UI update for patient unassignment\n  const handleUnassignPatient = useCallback(async (nurseId: string, roomNumber: string) => {\n    try {\n      // Find the nurse and patient\n      const nurse = nurses.find(n => n.id === nurseId);\n      const patient = patients.find(p => p.roomNumber === roomNumber);\n      \n      if (!nurse || !patient) return;\n      \n      // Update nurse assignments (optimistic update)\n      const updatedAssignedRooms = nurse.assignedRooms.filter(room => room !== roomNumber);\n      \n      // Update local state immediately (optimistic update)\n      setNurses(nurses.map(n => \n        n.id === nurseId ? { ...n, assignedRooms: updatedAssignedRooms } : n\n      ));\n      \n      setPatients(patients.map(p => \n        p.roomNumber === roomNumber ? { ...p, assigned: false } : p\n      ));\n      \n      // Add to pending changes\n      setPendingChanges(prev => ({\n        ...prev,\n        nurses: {\n          ...prev.nurses,\n          [nurseId]: { assignedRooms: updatedAssignedRooms }\n        },\n        patients: {\n          ...prev.patients,\n          [patient.id]: { assigned: false }\n        }\n      }));\n      \n      // Update in database\n      await Promise.all([\n        updateNurse(nurseId, { assignedRooms: updatedAssignedRooms }),\n        updatePatient(patient.id, { assigned: false })\n      ]);\n      \n      // Clear from pending changes after successful update\n      setPendingChanges(prev => {\n        const { [nurseId]: _, ...remainingNurses } = prev.nurses;\n        const { [patient.id]: __, ...remainingPatients } = prev.patients;\n        return {\n          ...prev,\n          nurses: remainingNurses,\n          patients: remainingPatients\n        };\n      });\n    } catch (error) {\n      console.error('Error unassigning patient:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to unassign patient. Changes will be saved when connection is restored.',\n        variant: 'destructive',\n      });\n    }\n  }, [nurses, patients]);\n  \n  // Optimistic UI update for nurse information\n  const handleUpdateNurse = useCallback(async (nurseId: string, data: Partial<Nurse>) => {\n    try {\n      // Update local state immediately (optimistic update)\n      setNurses(nurses.map(nurse => \n        nurse.id === nurseId ? { ...nurse, ...data } : nurse\n      ));\n      \n      // Add to pending changes\n      setPendingChanges(prev => ({\n        ...prev,\n        nurses: {\n          ...prev.nurses,\n          [nurseId]: { ...prev.nurses[nurseId], ...data }\n        }\n      }));\n      \n      // Update in database\n      await updateNurse(nurseId, data);\n      \n      // Clear from pending changes after successful update\n      setPendingChanges(prev => {\n        const { [nurseId]: _, ...remainingNurses } = prev.nurses;\n        return {\n          ...prev,\n          nurses: remainingNurses\n        };\n      });\n      \n      toast({\n        title: 'Nurse Updated',\n        description: 'Nurse information has been updated',\n      });\n    } catch (error) {\n      console.error('Error updating nurse:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to update nurse information. Changes will be saved when connection is restored.',\n        variant: 'destructive',\n      });\n    }\n  }, [nurses]);\n  \n  // Optimistic UI update for PCT information\n  const handleUpdatePCT = useCallback(async (pctId: string, data: Partial<PCT>) => {\n    try {\n      // Update local state immediately (optimistic update)\n      setPCTs(pcts.map(pct => \n        pct.id === pctId ? { ...pct, ...data } : pct\n      ));\n      \n      // Add to pending changes\n      setPendingChanges(prev => ({\n        ...prev,\n        pcts: {\n          ...prev.pcts,\n          [pctId]: { ...prev.pcts[pctId], ...data }\n        }\n      }));\n      \n      // Update in database\n      await updatePCT(pctId, data);\n      \n      // Clear from pending changes after successful update\n      setPendingChanges(prev => {\n        const { [pctId]: _, ...remainingPCTs } = prev.pcts;\n        return {\n          ...prev,\n          pcts: remainingPCTs\n        };\n      });\n      \n      toast({\n        title: 'PCT Updated',\n        description: 'PCT information has been updated',\n      });\n    } catch (error) {\n      console.error('Error updating PCT:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to update PCT information. Changes will be saved when connection is restored.',\n        variant: 'destructive',\n      });\n    }\n  }, [pcts]);\n  \n  // Optimistic UI update for charge nurse information\n  const handleUpdateChargeNurse = useCallback(async (data: Partial<StaffMember>) => {\n    try {\n      if (!chargeNurse) return;\n      \n      // Update local state immediately (optimistic update)\n      setChargeNurse({ ...chargeNurse, ...data });\n      \n      // Add to pending changes\n      setPendingChanges(prev => ({\n        ...prev,\n        staff: {\n          ...prev.staff,\n          [chargeNurse.id]: { ...prev.staff[chargeNurse.id], ...data }\n        }\n      }));\n      \n      // Update in database\n      await updateStaffMember(chargeNurse.id, data);\n      \n      // Clear from pending changes after successful update\n      setPendingChanges(prev => {\n        const { [chargeNurse.id]: _, ...remainingStaff } = prev.staff;\n        return {\n          ...prev,\n          staff: remainingStaff\n        };\n      });\n      \n      toast({\n        title: 'Charge Nurse Updated',\n        description: 'Charge nurse information has been updated',\n      });\n    } catch (error) {\n      console.error('Error updating charge nurse:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to update charge nurse information. Changes will be saved when connection is restored.',\n        variant: 'destructive',\n      });\n    }\n  }, [chargeNurse]);\n  \n  // Optimistic UI update for unit clerk information\n  const handleUpdateUnitClerk = useCallback(async (data: Partial<StaffMember>) => {\n    try {\n      if (!unitClerk) return;\n      \n      // Update local state immediately (optimistic update)\n      setUnitClerk({ ...unitClerk, ...data });\n      \n      // Add to pending changes\n      setPendingChanges(prev => ({\n        ...prev,\n        staff: {\n          ...prev.staff,\n          [unitClerk.id]: { ...prev.staff[unitClerk.id], ...data }\n        }\n      }));\n      \n      // Update in database\n      await updateStaffMember(unitClerk.id, data);\n      \n      // Clear from pending changes after successful update\n      setPendingChanges(prev => {\n        const { [unitClerk.id]: _, ...remainingStaff } = prev.staff;\n        return {\n          ...prev,\n          staff: remainingStaff\n        };\n      });\n      \n      toast({\n        title: 'Unit Clerk Updated',\n        description: 'Unit clerk information has been updated',\n      });\n    } catch (error) {\n      console.error('Error updating unit clerk:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to update unit clerk information. Changes will be saved when connection is restored.',\n        variant: 'destructive',\n      });\n    }\n  }, [unitClerk]);\n  \n  // Save all pending changes at once\n  const handleSaveLayout = useCallback(async () => {\n    try {\n      // Prepare batch updates\n      const patientUpdates = Object.entries(pendingChanges.patients).map(([id, data]) => ({\n        id,\n        data\n      }));\n      \n      // Apply all pending changes\n      if (patientUpdates.length > 0) {\n        await batchUpdatePatients(patientUpdates);\n      }\n      \n      // Apply individual updates for nurses, PCTs, and staff\n      await Promise.all([\n        ...Object.entries(pendingChanges.nurses).map(([id, data]) => \n          updateNurse(id, data)\n        ),\n        ...Object.entries(pendingChanges.pcts).map(([id, data]) => \n          updatePCT(id, data)\n        ),\n        ...Object.entries(pendingChanges.staff).map(([id, data]) => \n          updateStaffMember(id, data)\n        )\n      ]);\n      \n      // Clear all pending changes\n      setPendingChanges({\n        patients: {},\n        nurses: {},\n        pcts: {},\n        staff: {}\n      });\n      \n      setEditMode(false);\n      toast({\n        title: 'Layout Saved',\n        description: 'Unit layout has been saved successfully',\n      });\n    } catch (error) {\n      console.error('Error saving layout:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to save some changes. Please try again.',\n        variant: 'destructive',\n      });\n    }\n  }, [pendingChanges]);\n  \n  // Check if there are any pending changes\n  const hasPendingChanges = useMemo(() => {\n    return Object.keys(pendingChanges.patients).length > 0 ||\n           Object.keys(pendingChanges.nurses).length > 0 ||\n           Object.keys(pendingChanges.pcts).length > 0 ||\n           Object.keys(pendingChanges.staff).length > 0;\n  }, [pendingChanges]);\n  \n  if (loading || initializing) {\n    return (\n      <div className=\"bg-white rounded-lg border p-4 flex items-center justify-center h-64\">\n        <div className=\"text-center\">\n          <div className=\"w-12 h-12 border-4 border-t-blue-600 border-blue-200 rounded-full animate-spin mx-auto mb-3\"></div>\n          <p className=\"text-gray-600\">{initializing ? 'Initializing unit data...' : 'Loading...'}</p>\n        </div>\n      </div>\n    );\n  }\n  \n  if (!unit) {\n    return (\n      <div className=\"bg-white rounded-lg border p-4\">\n        <p className=\"text-center text-gray-500\">Unit not found</p>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"bg-white rounded-lg border p-4\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h3 className=\"text-xl font-semibold\">{unit.designation} Patient Grid</h3>\n        <div className=\"flex gap-2\">\n          {hasPendingChanges && (\n            <div className=\"text-amber-600 text-sm flex items-center\">\n              <span className=\"inline-block w-2 h-2 bg-amber-600 rounded-full mr-1\"></span>\n              Unsaved changes\n            </div>\n          )}\n          <Button \n            variant={editMode ? \"default\" : \"outline\"} \n            onClick={() => editMode ? handleSaveLayout() : setEditMode(true)}\n          >\n            {editMode ? \"Save Layout\" : \"Edit Layout\"}\n          </Button>\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {/* Unassigned Patients */}\n        <div className=\"border rounded-lg p-4\">\n          <h4 className=\"font-medium mb-3\">Unassigned Patients</h4>\n          <div className=\"space-y-2\">\n            {unassignedPatients.map(patient => (\n              <div key={patient.id} className=\"flex justify-between items-center p-2 border rounded bg-gray-50\">\n                <div>\n                  <span className=\"font-medium\">Room {patient.roomNumber}</span>\n                  {patient.name && <span className=\"ml-2 text-sm\">{patient.name}</span>}\n                </div>\n                <span className={`px-2 py-1 rounded-full text-xs ${\n                  patient.acuity >= 4 ? 'bg-red-100 text-red-800' :\n                  patient.acuity >= 3 ? 'bg-yellow-100 text-yellow-800' :\n                  'bg-green-100 text-green-800'\n                }`}>\n                  Acuity {patient.acuity}\n                </span>\n              </div>\n            ))}\n            {unassignedPatients.length === 0 && (\n              <p className=\"text-sm text-gray-500 italic\">All patients assigned</p>\n            )}\n          </div>\n        </div>\n        \n        {/* Nurse Cards */}\n        {nurses.map(nurse => (\n          <NurseCard\n            key={nurse.id}\n            nurse={nurse}\n            patients={patients}\n            onAssign={(patientId) => handleAssignPatient(nurse.id, patientId)}\n            onUnassign={(roomNumber) => handleUnassignPatient(nurse.id, roomNumber)}\n            onUpdate={(data) => handleUpdateNurse(nurse.id, data)}\n            editMode={editMode}\n          />\n        ))}\n        \n        {/* PCT Cards */}\n        {pcts.map(pct => (\n          <PCTCard\n            key={pct.id}\n            pct={pct}\n            onUpdate={(data) => handleUpdatePCT(pct.id, data)}\n            editMode={editMode}\n          />\n        ))}\n        \n        {/* Charge Nurse Card */}\n        {chargeNurse && (\n          <StaffCard\n            title=\"Charge Nurse\"\n            staffMember={chargeNurse}\n            onUpdate={handleUpdateChargeNurse}\n            editMode={editMode}\n            size=\"small\"\n          />\n        )}\n        \n        {/* Unit Clerk Card */}\n        {unitClerk && (\n          <StaffCard\n            title=\"Unit Clerk\"\n            staffMember={unitClerk}\n            onUpdate={handleUpdateUnitClerk}\n            editMode={editMode}\n            size=\"small\"\n          />\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3212, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/unitview_firebase/src/components/facility/unit-card.tsx"],"sourcesContent":["'use client';\n\nimport { Unit } from '@/lib/firebase';\n\ninterface UnitCardProps {\n  unit: Unit;\n  isSelected: boolean;\n  onSelect: () => void;\n}\n\nexport function UnitCard({ unit, isSelected, onSelect }: UnitCardProps) {\n  return (\n    <div \n      className={`border rounded-lg p-4 cursor-pointer transition-all ${\n        isSelected \n          ? 'border-blue-500 bg-blue-50 shadow-md' \n          : 'border-gray-200 hover:border-blue-300 hover:bg-gray-50'\n      }`}\n      onClick={onSelect}\n    >\n      <h3 className=\"font-medium text-lg\">{unit.designation}</h3>\n      \n      <div className=\"mt-2 space-y-1 text-sm text-gray-600\">\n        <p>Rooms: {unit.roomCount}</p>\n        <p>Room Range: {unit.roomRanges.join(', ')}</p>\n        <div className=\"flex flex-wrap gap-2 mt-2\">\n          <span className=\"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full\">\n            {unit.nurseCardCount} Nurse Cards\n          </span>\n          <span className=\"bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full\">\n            {unit.pctCardCount} PCT Cards\n          </span>\n          {unit.hasChargeNurse && (\n            <span className=\"bg-purple-100 text-purple-800 text-xs px-2 py-1 rounded-full\">\n              Charge Nurse\n            </span>\n          )}\n          {unit.hasUnitClerk && (\n            <span className=\"bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full\">\n              Unit Clerk\n            </span>\n          )}\n        </div>\n      </div>\n      \n      {isSelected && (\n        <div className=\"mt-3 text-blue-600 text-sm font-medium\">\n          Currently Selected\n        </div>\n      )}\n      \n      {unit.createdAt && (\n        <div className=\"mt-2 text-xs text-gray-400\">\n          Created: {new Date(unit.createdAt).toLocaleDateString()}\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAAA;;AAUO,SAAS,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAiB;IACpE,qBACE,8OAAC;QACC,WAAW,CAAC,oDAAoD,EAC9D,aACI,yCACA,0DACJ;QACF,SAAS;;0BAET,8OAAC;gBAAG,WAAU;0BAAuB,KAAK,WAAW;;;;;;0BAErD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;4BAAE;4BAAQ,KAAK,SAAS;;;;;;;kCACzB,8OAAC;;4BAAE;4BAAa,KAAK,UAAU,CAAC,IAAI,CAAC;;;;;;;kCACrC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAK,WAAU;;oCACb,KAAK,cAAc;oCAAC;;;;;;;0CAEvB,8OAAC;gCAAK,WAAU;;oCACb,KAAK,YAAY;oCAAC;;;;;;;4BAEpB,KAAK,cAAc,kBAClB,8OAAC;gCAAK,WAAU;0CAA+D;;;;;;4BAIhF,KAAK,YAAY,kBAChB,8OAAC;gCAAK,WAAU;0CAA+D;;;;;;;;;;;;;;;;;;YAOpF,4BACC,8OAAC;gBAAI,WAAU;0BAAyC;;;;;;YAKzD,KAAK,SAAS,kBACb,8OAAC;gBAAI,WAAU;;oBAA6B;oBAChC,IAAI,KAAK,KAAK,SAAS,EAAE,kBAAkB;;;;;;;;;;;;;AAK/D","debugId":null}},
    {"offset": {"line": 3339, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/unitview_firebase/src/lib/firebase.ts"],"sourcesContent":["\nimport { app, db, storage, auth } from './firebase-config';\nimport { collection, doc, setDoc, getDoc, getDocs, updateDoc, deleteDoc, query, where, DocumentData, writeBatch } from 'firebase/firestore';\n\n// Facility Types\nexport interface Facility {\n  id: string;\n  name: string;\n  createdAt?: number;\n}\n\n// Unit Types\nexport interface Unit {\n  id: string;\n  facilityId: string;\n  designation: string;\n  roomCount: number;\n  roomRanges: string[];\n  nurseCardCount: number;\n  pctCardCount: number;\n  hasChargeNurse: boolean;\n  hasUnitClerk: boolean;\n  createdAt?: number;\n  updatedAt?: number;\n}\n\n// Patient Types\nexport interface Patient {\n  id: string;\n  unitId: string;\n  roomNumber: string;\n  name: string;\n  acuity: number;\n  assigned: boolean;\n  notes?: string;\n  createdAt?: number;\n  updatedAt?: number;\n}\n\n// Staff Types\nexport interface Nurse {\n  id: string;\n  unitId: string;\n  name: string;\n  spectraNumber: string;\n  reliefName: string;\n  assignedRooms: string[];\n  acuityCapacity: number;\n  createdAt?: number;\n  updatedAt?: number;\n}\n\nexport interface PCT {\n  id: string;\n  unitId: string;\n  name: string;\n  spectraNumber: string;\n  reliefName: string;\n  roomRange: string;\n  createdAt?: number;\n  updatedAt?: number;\n}\n\nexport interface StaffMember {\n  id: string;\n  unitId: string;\n  name: string;\n  spectraNumber: string;\n  role: 'chargeNurse' | 'unitClerk';\n  createdAt?: number;\n  updatedAt?: number;\n}\n\nexport interface Module {\n  id: string;\n  name: string;\n  description: string;\n  enabled: boolean;\n  updatedAt?: number;\n}\n\n// Firebase Collection References\nconst facilitiesCollection = collection(db, 'facilities');\nconst unitsCollection = collection(db, 'units');\nconst patientsCollection = collection(db, 'patients');\nconst nursesCollection = collection(db, 'nurses');\nconst pctsCollection = collection(db, 'pcts');\nconst staffCollection = collection(db, 'staff');\nconst modulesCollection = collection(db, 'modules');\n\n// Cache\nlet facilitiesCache: Facility[] | null = null;\nlet unitsCache: Map<string, Unit[]> = new Map();\nlet unitDataCache: Map<string, {\n  unit: Unit | null,\n  patients: Patient[],\n  nurses: Nurse[],\n  pcts: PCT[],\n  chargeNurse: StaffMember | null,\n  unitClerk: StaffMember | null\n}> = new Map();\n\n// Facility Functions\nexport async function createFacility(facilityData: Omit<Facility, 'id' | 'createdAt'>): Promise<Facility> {\n  const timestamp = Date.now();\n  const facilityRef = doc(facilitiesCollection);\n  const newFacility: Facility = {\n    ...facilityData,\n    id: facilityRef.id,\n    createdAt: timestamp,\n  };\n  await setDoc(facilityRef, newFacility);\n  if (facilitiesCache) {\n    facilitiesCache.push(newFacility);\n  }\n  return newFacility;\n}\n\nexport async function getFacilities(): Promise<Facility[]> {\n  if (facilitiesCache) {\n    return facilitiesCache;\n  }\n  const snapshot = await getDocs(facilitiesCollection);\n  const facilities = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as Facility));\n  facilitiesCache = facilities;\n  return facilities;\n}\n\n\n// Unit Functions\nexport async function createUnit(unitData: Omit<Unit, 'id' | 'createdAt' | 'updatedAt'>): Promise<Unit> {\n  const timestamp = Date.now();\n  const unitRef = doc(unitsCollection);\n  const newUnit: Unit = {\n    ...unitData,\n    id: unitRef.id,\n    createdAt: timestamp,\n    updatedAt: timestamp\n  };\n  \n  await setDoc(unitRef, newUnit);\n  \n  // Update cache\n  const facilityUnits = unitsCache.get(newUnit.facilityId) || [];\n  unitsCache.set(newUnit.facilityId, [...facilityUnits, newUnit]);\n  \n  return newUnit;\n}\n\nexport async function getUnits(facilityId: string): Promise<Unit[]> {\n  if (!facilityId) return [];\n\n  // Return from cache if available\n  if (unitsCache.has(facilityId)) {\n    return unitsCache.get(facilityId)!;\n  }\n  \n  const q = query(unitsCollection, where('facilityId', '==', facilityId));\n  const snapshot = await getDocs(q);\n  const units = snapshot.docs.map(doc => {\n    return { id: doc.id, ...doc.data() } as Unit;\n  });\n\n  unitsCache.set(facilityId, units);\n  return units;\n}\n\nexport async function getUnit(unitId: string): Promise<Unit | null> {\n  // Check cache first\n  const cachedData = unitDataCache.get(unitId);\n  if (cachedData?.unit) {\n    return cachedData.unit;\n  }\n  \n  const unitRef = doc(unitsCollection, unitId);\n  const unitSnap = await getDoc(unitRef);\n  \n  if (unitSnap.exists()) {\n    return { id: unitSnap.id, ...unitSnap.data() } as Unit;\n  }\n  \n  return null;\n}\n\nexport async function updateUnit(unitId: string, data: Partial<Unit>): Promise<void> {\n  const unitRef = doc(unitsCollection, unitId);\n  const updateData = {\n    ...data,\n    updatedAt: Date.now()\n  };\n  \n  await updateDoc(unitRef, updateData);\n  \n  // Update cache\n  unitsCache.forEach((units, facilityId) => {\n    const index = units.findIndex(u => u.id === unitId);\n    if (index !== -1) {\n      const updatedUnits = [...units];\n      updatedUnits[index] = { ...updatedUnits[index], ...updateData };\n      unitsCache.set(facilityId, updatedUnits);\n    }\n  });\n\n  if (unitDataCache.has(unitId) && unitDataCache.get(unitId)!.unit) {\n    unitDataCache.get(unitId)!.unit = { \n      ...unitDataCache.get(unitId)!.unit!, \n      ...updateData \n    };\n  }\n}\n\nexport async function deleteUnit(unitId: string, facilityId: string): Promise<void> {\n  const unitRef = doc(unitsCollection, unitId);\n  await deleteDoc(unitRef);\n  \n  // Delete related data\n  await deleteUnitPatients(unitId);\n  await deleteUnitNurses(unitId);\n  await deleteUnitPCTs(unitId);\n  await deleteUnitStaff(unitId);\n  \n  // Update cache\n  const facilityUnits = unitsCache.get(facilityId) || [];\n  unitsCache.set(facilityId, facilityUnits.filter(u => u.id !== unitId));\n  unitDataCache.delete(unitId);\n}\n\n// Patient Functions\nexport async function createPatient(patientData: Omit<Patient, 'id' | 'createdAt' | 'updatedAt'>): Promise<Patient> {\n  const timestamp = Date.now();\n  const patientRef = doc(patientsCollection);\n  const newPatient: Patient = {\n    ...patientData,\n    id: patientRef.id,\n    createdAt: timestamp,\n    updatedAt: timestamp\n  };\n  \n  await setDoc(patientRef, newPatient);\n  \n  // Update cache\n  if (unitDataCache.has(patientData.unitId)) {\n    unitDataCache.get(patientData.unitId)!.patients.push(newPatient);\n  }\n  \n  return newPatient;\n}\n\n// Batch create patients for better performance\nexport async function batchCreatePatients(patientsData: Omit<Patient, 'id' | 'createdAt' | 'updatedAt'>[]): Promise<Patient[]> {\n\n  if (patientsData.length === 0) {\n    return [];\n  }\n\n  const timestamp = Date.now();\n  const batch = writeBatch(db);\n  const newPatients: Patient[] = [];\n  \n  for (const patientData of patientsData) {\n    const patientRef = doc(patientsCollection);\n    const newPatient: Patient = {\n      ...patientData,\n      id: patientRef.id,\n      createdAt: timestamp,\n      updatedAt: timestamp\n    };\n    \n    batch.set(patientRef, newPatient);\n    newPatients.push(newPatient);\n\n  }\n  \n  await batch.commit();\n  return newPatients;\n}\n\nexport async function getPatientsByUnit(unitId: string): Promise<Patient[]> {\n  if (!unitId) return [];\n  // Check cache first\n  const cachedData = unitDataCache.get(unitId);\n  if (cachedData?.patients.length > 0) {\n    return cachedData.patients;\n  }\n  \n  const q = query(patientsCollection, where('unitId', '==', unitId));\n  const snapshot = await getDocs(q);\n  const patients = snapshot.docs.map(doc => {\n    return { id: doc.id, ...doc.data() } as Patient;\n  });\n\n  if (unitDataCache.has(unitId)) {\n    unitDataCache.get(unitId)!.patients = patients;\n  } else {\n    unitDataCache.set(unitId, { unit: null, patients, nurses: [], pcts: [], chargeNurse: null, unitClerk: null });\n  }\n  return patients;\n}\n\nexport async function updatePatient(patientId: string, data: Partial<Patient>): Promise<void> {\n  const patientRef = doc(patientsCollection, patientId);\n  const updateData = {\n    ...data,\n    updatedAt: Date.now()\n  };\n  \n  await updateDoc(patientRef, updateData);\n  \n  // Update cache\n  for (const [unitId, cachedData] of unitDataCache.entries()) {\n    const index = cachedData.patients.findIndex(p => p.id === patientId);\n    if (index !== -1) {\n      cachedData.patients[index] = { ...cachedData.patients[index], ...updateData };\n      break;\n    }\n  }\n}\n\n// Batch update patients for better performance\nexport async function batchUpdatePatients(updates: { id: string, data: Partial<Patient> }[]): Promise<void> {\n  const batch = writeBatch(db);\n  const timestamp = Date.now();\n  \n  for (const { id, data } of updates) {\n    const patientRef = doc(patientsCollection, id);\n    batch.update(patientRef, { ...data, updatedAt: timestamp });\n    \n    // Update cache\n    for (const [unitId, cachedData] of unitDataCache.entries()) {\n      const index = cachedData.patients.findIndex(p => p.id === id);\n      if (index !== -1) {\n        cachedData.patients[index] = { \n          ...cachedData.patients[index], \n          ...data,\n          updatedAt: timestamp\n        };\n        break;\n      }\n    }\n  }\n  \n  await batch.commit();\n}\n\nexport async function deletePatient(patientId: string): Promise<void> {\n  const patientRef = doc(patientsCollection, patientId);\n  await deleteDoc(patientRef);\n  \n  // Update cache\n  for (const [unitId, cachedData] of unitDataCache.entries()) {\n    cachedData.patients = cachedData.patients.filter(p => p.id !== patientId);\n  }\n}\n\nexport async function deleteUnitPatients(unitId: string): Promise<void> {\n  if (!unitId) return;\n  const q = query(patientsCollection, where('unitId', '==', unitId));\n  const snapshot = await getDocs(q);\n  if (snapshot.empty) {\n    return;\n  }\n  \n  const batch = writeBatch(db);\n  snapshot.docs.forEach(doc => {\n    batch.delete(doc.ref);\n  });\n  \n  await batch.commit();\n}\n\n// Nurse Functions\nexport async function createNurse(nurseData: Omit<Nurse, 'id' | 'createdAt' | 'updatedAt'>): Promise<Nurse> {\n  const timestamp = Date.now();\n  const nurseRef = doc(nursesCollection);\n  const newNurse: Nurse = {\n    ...nurseData,\n    id: nurseRef.id,\n    createdAt: timestamp,\n    updatedAt: timestamp\n  };\n  \n  await setDoc(nurseRef, newNurse);\n  \n  // Update cache\n  if (unitDataCache.has(nurseData.unitId)) {\n    unitDataCache.get(nurseData.unitId)!.nurses.push(newNurse);\n  }\n  \n  return newNurse;\n}\n\n// Batch create nurses for better performance\nexport async function batchCreateNurses(nursesData: Omit<Nurse, 'id' | 'createdAt' | 'updatedAt'>[]): Promise<Nurse[]> {\n  if (nursesData.length === 0) {\n    return [];\n  }\n\n  const timestamp = Date.now();\n  const batch = writeBatch(db);\n  const newNurses: Nurse[] = [];\n  \n  for (const nurseData of nursesData) {\n    const nurseRef = doc(nursesCollection);\n    const newNurse: Nurse = {\n      ...nurseData,\n      id: nurseRef.id,\n      createdAt: timestamp,\n      updatedAt: timestamp\n    };\n    \n    batch.set(nurseRef, newNurse);\n    newNurses.push(newNurse);\n\n  }\n  \n  await batch.commit();\n  return newNurses;\n}\n\nexport async function getNursesByUnit(unitId: string): Promise<Nurse[]> {\n  if (!unitId) return [];\n  // Check cache first\n  const cachedData = unitDataCache.get(unitId);\n  if (cachedData?.nurses.length > 0) {\n    return cachedData.nurses;\n  }\n  \n  const q = query(nursesCollection, where('unitId', '==', unitId));\n  const snapshot = await getDocs(q);\n  const nurses = snapshot.docs.map(doc => {\n    return { id: doc.id, ...doc.data() } as Nurse;\n  });\n\n  if (unitDataCache.has(unitId)) {\n    unitDataCache.get(unitId)!.nurses = nurses;\n  } else {\n    unitDataCache.set(unitId, { unit: null, patients: [], nurses, pcts: [], chargeNurse: null, unitClerk: null });\n  }\n  return nurses;\n}\n\nexport async function updateNurse(nurseId: string, data: Partial<Nurse>): Promise<void> {\n  const nurseRef = doc(nursesCollection, nurseId);\n  const updateData = {\n    ...data,\n    updatedAt: Date.now()\n  };\n  \n  await updateDoc(nurseRef, updateData);\n  \n  // Update cache\n  for (const [unitId, cachedData] of unitDataCache.entries()) {\n    const index = cachedData.nurses.findIndex(n => n.id === nurseId);\n    if (index !== -1) {\n      cachedData.nurses[index] = { ...cachedData.nurses[index], ...updateData };\n      break;\n    }\n  }\n}\n\nexport async function deleteNurse(nurseId: string): Promise<void> {\n  const nurseRef = doc(nursesCollection, nurseId);\n  await deleteDoc(nurseRef);\n  \n  // Update cache\n  for (const [unitId, cachedData] of unitDataCache.entries()) {\n    cachedData.nurses = cachedData.nurses.filter(n => n.id !== nurseId);\n  }\n}\n\nexport async function deleteUnitNurses(unitId: string): Promise<void> {\n  if (!unitId) return;\n  const  q = query(nursesCollection, where('unitId', '==', unitId));\n  const snapshot = await getDocs(q);    \n  if (snapshot.empty) {\n    return;\n  }\n  \n  const batch = writeBatch(db);\n  snapshot.docs.forEach(doc => {\n    batch.delete(doc.ref);\n  });\n  \n  await batch.commit();\n}\n\n// PCT Functions\nexport async function createPCT(pctData: Omit<PCT, 'id' | 'createdAt' | 'updatedAt'>): Promise<PCT> {\n  const timestamp = Date.now();\n  const pctRef = doc(pctsCollection);\n  const newPCT: PCT = {\n    ...pctData,\n    id: pctRef.id,\n    createdAt: timestamp,\n    updatedAt: timestamp\n  };\n  \n  await setDoc(pctRef, newPCT);\n  \n  // Update cache\n  if (unitDataCache.has(pctData.unitId)) {\n    unitDataCache.get(pctData.unitId)!.pcts.push(newPCT);\n  }\n  \n  return newPCT;\n}\n\n// Batch create PCTs for better performance\nexport async function batchCreatePCTs(pctsData: Omit<PCT, 'id' | 'createdAt' | 'updatedAt'>[]): Promise<PCT[]> {\n\n  if (pctsData.length === 0) {\n    return [];\n  }\n  \n  const timestamp = Date.now();\n  const batch = writeBatch(db);\n  const newPCTs: PCT[] = [];\n  \n  for (const pctData of pctsData) {\n    const pctRef = doc(pctsCollection);\n    const newPCT: PCT = {\n      ...pctData,\n      id: pctRef.id,\n      createdAt: timestamp,\n      updatedAt: timestamp\n    };\n    \n    batch.set(pctRef, newPCT);\n    newPCTs.push(newPCT);\n  }\n  \n  await batch.commit();\n  return newPCTs;\n}\n\nexport async function getPCTsByUnit(unitId: string): Promise<PCT[]> {\n  if (!unitId) return [];\n  // Check cache first\n  const cachedData = unitDataCache.get(unitId);\n  if (cachedData?.pcts.length > 0) {\n    return cachedData.pcts;\n  }\n  \n  const q = query(pctsCollection, where('unitId', '==', unitId));\n  const snapshot = await getDocs(q);\n  const pcts = snapshot.docs.map(doc => {\n    return { id: doc.id, ...doc.data() } as PCT;\n  });\n\n  if (unitDataCache.has(unitId)) {\n    unitDataCache.get(unitId)!.pcts = pcts;\n  } else {\n    unitDataCache.set(unitId, { unit: null, patients: [], nurses: [], pcts, chargeNurse: null, unitClerk: null });\n  }\n  return pcts;\n}\n\nexport async function updatePCT(pctId: string, data: Partial<PCT>): Promise<void> {\n  const pctRef = doc(pctsCollection, pctId);\n  const updateData = {\n    ...data,\n    updatedAt: Date.now()\n  };\n  \n  await updateDoc(pctRef, updateData);\n  \n  // Update cache\n  for (const [unitId, cachedData] of unitDataCache.entries()) {\n    const index = cachedData.pcts.findIndex(p => p.id === pctId);\n    if (index !== -1) {\n      cachedData.pcts[index] = { ...cachedData.pcts[index], ...updateData };\n      break;\n    }\n  }\n}\n\nexport async function deletePCT(pctId: string): Promise<void> {\n  const pctRef = doc(pctsCollection, pctId);\n  await deleteDoc(pctRef);\n  \n  // Update cache\n  for (const [unitId, cachedData] of unitDataCache.entries()) {\n    cachedData.pcts = cachedData.pcts.filter(p => p.id !== pctId);\n  }\n}\n\nexport async function deleteUnitPCTs(unitId: string): Promise<void> {\n  if (!unitId) return;\n  const q = query(pctsCollection, where('unitId', '==', unitId));\n  const snapshot = await getDocs(q);\n  \n  if (snapshot.empty) {\n    return;\n  }\n\n  const batch = writeBatch(db);\n  snapshot.docs.forEach(doc => {\n    batch.delete(doc.ref);\n  });\n  \n  await batch.commit();\n}\n\n// Staff Functions\nexport async function createStaffMember(staffData: Omit<StaffMember, 'id' | 'createdAt' | 'updatedAt'>): Promise<StaffMember> {\n  const timestamp = Date.now();\n  const staffRef = doc(staffCollection);\n  const newStaff: StaffMember = {\n    ...staffData,\n    id: staffRef.id,\n    createdAt: timestamp,\n    updatedAt: timestamp\n  };\n  \n  await setDoc(staffRef, newStaff);\n  \n  // Update cache\n  if (unitDataCache.has(staffData.unitId)) {\n    if (staffData.role === 'chargeNurse') {\n      unitDataCache.get(staffData.unitId)!.chargeNurse = newStaff;\n    } else if (staffData.role === 'unitClerk') {\n      unitDataCache.get(staffData.unitId)!.unitClerk = newStaff;\n    }\n  }\n  \n  return newStaff;\n}\n\n// Batch create staff members for better performance\nexport async function batchCreateStaffMembers(staffData: Omit<StaffMember, 'id' | 'createdAt' | 'updatedAt'>[]): Promise<StaffMember[]> {\n\n  if (staffData.length === 0) {\n    return [];\n  }\n\n  const timestamp = Date.now();\n  const batch = writeBatch(db);\n  const newStaffMembers: StaffMember[] = [];\n  \n  for (const staffMemberData of staffData) {\n    const staffRef = doc(staffCollection);\n    const newStaff: StaffMember = {\n      ...staffMemberData,\n      id: staffRef.id,\n      createdAt: timestamp,\n      updatedAt: timestamp\n    };\n    \n    batch.set(staffRef, newStaff);\n    newStaffMembers.push(newStaff);\n\n  }\n  \n  await batch.commit();\n  return newStaffMembers;\n}\n\nexport async function getStaffByUnit(unitId: string): Promise<StaffMember[]> {\n  if (!unitId) return [];\n  const q = query(staffCollection, where('unitId', '==', unitId));\n  const snapshot = await getDocs(q);\n  return snapshot.docs.map(doc => {\n    return { id: doc.id, ...doc.data() } as StaffMember;\n  });\n}\n\nexport async function getStaffByUnitAndRole(unitId: string, role: 'chargeNurse' | 'unitClerk'): Promise<StaffMember | null> {\n  if (!unitId) return null;\n  // Check cache first\n  const cachedData = unitDataCache.get(unitId);\n  if (role === 'chargeNurse' && cachedData?.chargeNurse) {\n    return cachedData.chargeNurse;\n  } else if (role === 'unitClerk' && cachedData?.unitClerk) {\n    return cachedData.unitClerk;\n  }\n  \n  const q = query(staffCollection, where('unitId', '==', unitId), where('role', '==', role));\n  const snapshot = await getDocs(q);\n  \n  if (snapshot.empty) {\n    return null;\n  }\n  \n  const staffData = snapshot.docs[0].data();\n  const staffMember = { id: snapshot.docs[0].id, ...staffData } as StaffMember;\n\n  if (unitDataCache.has(unitId)) {\n    if (role === 'chargeNurse') {\n        unitDataCache.get(unitId)!.chargeNurse = staffMember;\n    } else if (role === 'unitClerk') {\n        unitDataCache.get(unitId)!.unitClerk = staffMember;\n    }\n  } else {\n      unitDataCache.set(unitId, {\n          unit: null,\n          patients: [],\n          nurses: [],\n          pcts: [],\n          chargeNurse: role === 'chargeNurse' ? staffMember : null,\n          unitClerk: role === 'unitClerk' ? staffMember : null\n      });\n  }\n  return staffMember;\n}\n\nexport async function updateStaffMember(staffId: string, data: Partial<StaffMember>): Promise<void> {\n  const staffRef = doc(staffCollection, staffId);\n  const updateData = {\n    ...data,\n    updatedAt: Date.now()\n  };\n  \n  await updateDoc(staffRef, updateData);\n  \n  // Update cache\n  for (const [unitId, cachedData] of unitDataCache.entries()) {\n    if (cachedData.chargeNurse?.id === staffId) {\n      cachedData.chargeNurse = { ...cachedData.chargeNurse, ...updateData };\n    } else if (cachedData.unitClerk?.id === staffId) {\n      cachedData.unitClerk = { ...cachedData.unitClerk, ...updateData };\n    }\n  }\n}\n\nexport async function deleteStaffMember(staffId: string): Promise<void> {\n  const staffRef = doc(staffCollection, staffId);\n  await deleteDoc(staffRef);\n  \n  // Update cache\n  for (const [unitId, cachedData] of unitDataCache.entries()) {\n    if (cachedData.chargeNurse?.id === staffId) {\n      cachedData.chargeNurse = null;\n    } else if (cachedData.unitClerk?.id === staffId) {\n      cachedData.unitClerk = null;\n    }\n  }\n}\n\nexport async function deleteUnitStaff(unitId: string): Promise<void> {\n  if (!unitId) return;\n  const q = query(staffCollection, where('unitId', '==', unitId));\n  const snapshot = await getDocs(q);\n  \n  if (snapshot.empty) {\n    return;\n  }\n  \n  const batch = writeBatch(db);\n  snapshot.docs.forEach(doc => {\n    batch.delete(doc.ref);\n  });\n  \n  await batch.commit();\n}\n\n// Module Functions\nexport async function getModules(): Promise<Module[]> {\n  const snapshot = await getDocs(modulesCollection);\n  return snapshot.docs.map(doc => {\n    return { id: doc.id, ...doc.data() } as Module;\n  });\n}\n\nexport async function updateModule(moduleId: string, enabled: boolean): Promise<void> {\n  const moduleRef = doc(modulesCollection, moduleId);\n  await updateDoc(moduleRef, {\n    enabled,\n    updatedAt: Date.now()\n  });\n}\n\nexport async function initializeModules(modules: Omit<Module, 'updatedAt'>[]): Promise<void> {\n  const timestamp = Date.now();\n  const batch = writeBatch(db);\n  \n  for (const module of modules) {\n    const moduleRef = doc(modulesCollection, module.id);\n    const moduleSnap = await getDoc(moduleRef);\n    \n    if (!moduleSnap.exists()) {\n      batch.set(moduleRef, {\n        ...module,\n        updatedAt: timestamp\n      });\n    }\n  }\n  \n  await batch.commit();\n}\n\n// Initialize default modules if they don't exist\nexport async function setupDefaultModules(): Promise<void> {\n  const defaultModules: Omit<Module, 'updatedAt'>[] = [\n    { id: 'mock-patient', name: 'Mock Patient Data', description: 'Generate mock patient data for testing', enabled: true },\n    { id: 'spectra-pool', name: 'Spectra Pool Management', description: 'Manage spectra pool assignments', enabled: false },\n    { id: 'acuity-tracking', name: 'Acuity Tracking', description: 'Track and manage patient acuity levels', enabled: true },\n    { id: 'bed-management', name: 'Bed Management', description: 'Track bed availability and assignments', enabled: true },\n    { id: 'staff-messaging', name: 'Staff Messaging', description: 'Internal messaging system for staff', enabled: false }\n  ];\n  \n  await initializeModules(defaultModules);\n}\n\n// Optimized function to load all unit data at once\nexport async function loadUnitData(unitId: string): Promise<{\n  unit: Unit | null,\n  patients: Patient[],\n  nurses: Nurse[],\n  pcts: PCT[],\n  chargeNurse: StaffMember | null,\n  unitClerk: StaffMember | null\n}> {\n  if (!unitId) return { unit: null, patients: [], nurses: [], pcts: [], chargeNurse: null, unitClerk: null };\n\n  // Check cache first\n  if (unitDataCache.has(unitId)) {\n    const cached = unitDataCache.get(unitId)!;\n    // A simple check to see if the cache is populated\n    if (cached.unit) return cached;\n  }\n  \n  // Load all data in parallel\n  const [unit, patients, nurses, pcts, chargeNurse, unitClerk] = await Promise.all([\n    getUnit(unitId),\n    getPatientsByUnit(unitId),\n    getNursesByUnit(unitId),\n    getPCTsByUnit(unitId),\n    getStaffByUnitAndRole(unitId, 'chargeNurse'),\n    getStaffByUnitAndRole(unitId, 'unitClerk')\n  ]);\n  \n  const data = { unit, patients, nurses, pcts, chargeNurse, unitClerk };\n  unitDataCache.set(unitId, data);\n\n  return data;\n}\n\nexport async function initializeUnitData(unit: Unit): Promise<{\n  patients: Patient[],\n  nurses: Nurse[],\n  pcts: PCT[],\n  chargeNurse: StaffMember | null,\n  unitClerk: StaffMember | null\n}> {\n  // Generate all the data first\n  const patientsData: Omit<Patient, 'id' | 'createdAt' | 'updatedAt'>[] = [];\n  const nursesData: Omit<Nurse, 'id' | 'createdAt' | 'updatedAt'>[] = [];\n  const pctsData: Omit<PCT, 'id' | 'createdAt' | 'updatedAt'>[] = [];\n  const staffData: Omit<StaffMember, 'id' | 'createdAt' | 'updatedAt'>[] = [];\n  \n  // Generate patient data\n  for (const range of unit.roomRanges) {\n    const [start, end] = range.split('-').map(num => parseInt(num, 10));\n    for (let roomNum = start; roomNum <= end; roomNum++) {\n      patientsData.push({\n        unitId: unit.id,\n        roomNumber: roomNum.toString(),\n        name: '',\n        acuity: Math.floor(Math.random() * 5) + 1, // Random acuity 1-5\n        assigned: false\n      });\n    }\n  }\n  \n  // Generate nurse data\n  for (let i = 0; i < unit.nurseCardCount; i++) {\n    nursesData.push({\n      unitId: unit.id,\n      name: `Nurse ${i + 1}`,\n      spectraNumber: `SN${10000 + i}`,\n      reliefName: '',\n      assignedRooms: [],\n      acuityCapacity: 12\n    });\n  }\n  \n  // Generate PCT data\n  for (let i = 0; i < unit.pctCardCount; i++) {\n    // Divide room ranges among PCTs\n    const rangeIndex = i % unit.roomRanges.length;\n    const [start, end] = unit.roomRanges[rangeIndex].split('-').map(num => parseInt(num, 10));\n    const rangeSize = end - start + 1;\n    const pctRangeSize = Math.ceil(rangeSize / unit.pctCardCount);\n    \n    const pctStart = start + (i * pctRangeSize);\n    const pctEnd = Math.min(pctStart + pctRangeSize - 1, end);\n    \n    pctsData.push({\n      unitId: unit.id,\n      name: `PCT ${i + 1}`,\n      spectraNumber: `PCT${10000 + i}`,\n      reliefName: '',\n      roomRange: `${pctStart}-${pctEnd}`\n    });\n  }\n  \n  // Generate staff data\n  if (unit.hasChargeNurse) {\n    staffData.push({\n      unitId: unit.id,\n      name: '',\n      spectraNumber: '',\n      role: 'chargeNurse'\n    });\n  }\n  \n  if (unit.hasUnitClerk) {\n    staffData.push({\n      unitId: unit.id,\n      name: '',\n      spectraNumber: '',\n      role: 'unitClerk'\n    });\n  }\n  \n\n  const [patients, nurses, pcts, staffMembers] = await Promise.all([\n    batchCreatePatients(patientsData),\n    batchCreateNurses(nursesData),\n    batchCreatePCTs(pctsData),\n    batchCreateStaffMembers(staffData)\n  ]);\n  \n  // Process staff members\n  let chargeNurse: StaffMember | null = null;\n  let unitClerk: StaffMember | null = null;\n  \n  for (const staff of staffMembers) {\n    if (staff.role === 'chargeNurse') {\n      chargeNurse = staff;\n    } else if (staff.role === 'unitClerk') {\n      unitClerk = staff;\n    }\n  }\n  \n  return {\n    patients,\n    nurses,\n    pcts,\n    chargeNurse,\n    unitClerk\n  };\n}\nexport { app, db, storage, auth };\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4199, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/unitview_firebase/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-gray-200\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,wCAAwC;QACrD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 4223, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/unitview_firebase/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 4252, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/unitview_firebase/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitives from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitives.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitives.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitives.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAoB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 4284, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/unitview_firebase/src/components/auth/login-dialog.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { toast } from '@/components/ui/use-toast';\n\ninterface LoginDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onLogin: (data: {email: string, password: string}) => Promise<boolean>;\n}\n\nexport function LoginDialog({ open, onOpenChange, onLogin }: LoginDialogProps) {\n  const [email, setEmail] = useState('admin@unitview.com');\n  const [password, setPassword] = useState('password');\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleLoginAttempt = async () => {\n    setIsLoggingIn(true);\n    setError('');\n    const success = await onLogin({ email, password });\n    setIsLoggingIn(false);\n    if (!success) {\n      setError('Invalid credentials. Please try again.');\n    }\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle>Authorization Required</DialogTitle>\n          <DialogDescription>\n            Please log in to access this facility's information.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"space-y-4 py-4\">\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"email\">Email</Label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              placeholder=\"admin@unitview.com\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"password\">Password</Label>\n            <Input\n              id=\"password\"\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          {error && <p className=\"text-sm text-red-500\">{error}</p>}\n           <p className=\"text-xs text-gray-500\">\n              For demo purposes, use email: admin@unitview.com and password: password\n          </p>\n        </div>\n        <DialogFooter>\n          <Button type=\"button\" variant=\"outline\" onClick={() => onOpenChange(false)} disabled={isLoggingIn}>\n            Cancel\n          </Button>\n          <Button type=\"submit\" onClick={handleLoginAttempt} disabled={isLoggingIn}>\n            {isLoggingIn ? 'Logging In...' : 'Login'}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAQA;AACA;AAbA;;;;;;;AAsBO,SAAS,YAAY,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAoB;IAC3E,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,qBAAqB;QACzB,eAAe;QACf,SAAS;QACT,MAAM,UAAU,MAAM,QAAQ;YAAE;YAAO;QAAS;QAChD,eAAe;QACf,IAAI,CAAC,SAAS;YACZ,SAAS;QACX;IACF;IAEA,qBACE,8OAAC,kIAAA,CAAA,SAAM;QAAC,MAAM;QAAM,cAAc;kBAChC,cAAA,8OAAC,kIAAA,CAAA,gBAAa;YAAC,WAAU;;8BACvB,8OAAC,kIAAA,CAAA,eAAY;;sCACX,8OAAC,kIAAA,CAAA,cAAW;sCAAC;;;;;;sCACb,8OAAC,kIAAA,CAAA,oBAAiB;sCAAC;;;;;;;;;;;;8BAIrB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,iIAAA,CAAA,QAAK;oCAAC,SAAQ;8CAAQ;;;;;;8CACvB,8OAAC,iIAAA,CAAA,QAAK;oCACJ,IAAG;oCACH,MAAK;oCACL,aAAY;oCACZ,OAAO;oCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;sCAG5C,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,iIAAA,CAAA,QAAK;oCAAC,SAAQ;8CAAW;;;;;;8CAC1B,8OAAC,iIAAA,CAAA,QAAK;oCACJ,IAAG;oCACH,MAAK;oCACL,aAAY;oCACZ,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;wBAG9C,uBAAS,8OAAC;4BAAE,WAAU;sCAAwB;;;;;;sCAC9C,8OAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;;8BAIxC,8OAAC,kIAAA,CAAA,eAAY;;sCACX,8OAAC,kIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,SAAQ;4BAAU,SAAS,IAAM,aAAa;4BAAQ,UAAU;sCAAa;;;;;;sCAGnG,8OAAC,kIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,SAAS;4BAAoB,UAAU;sCAC1D,cAAc,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;AAM7C","debugId":null}},
    {"offset": {"line": 4473, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/unitview_firebase/src/app/facility-setup/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { CreateUnitDialog } from '@/components/facility/create-unit-dialog';\nimport { ModuleToggleCard } from '@/components/facility/module-toggle-card';\nimport { PatientGrid } from '@/components/shared/patient-grid';\nimport { UnitCard } from '@/components/facility/unit-card';\nimport { \n  getUnits, \n  createUnit, \n  getModules, \n  updateModule, \n  setupDefaultModules, \n  Unit, \n  Module,\n  Facility,\n  getFacilities,\n  createFacility\n} from '@/lib/firebase';\nimport { toast } from '@/components/ui/use-toast';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { PlusCircle, Hospital } from 'lucide-react';\nimport { LoginDialog } from '@/components/auth/login-dialog';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '@/lib/firebase-config';\n\nexport default function FacilitySetupPage() {\n  const [facilities, setFacilities] = useState<Facility[]>([]);\n  const [selectedFacility, setSelectedFacility] = useState<Facility | null>(null);\n  const [units, setUnits] = useState<Unit[]>([]);\n  const [modules, setModules] = useState<Module[]>([]);\n  const [isCreateUnitOpen, setIsCreateUnitOpen] = useState(false);\n  const [selectedUnit, setSelectedUnit] = useState<Unit | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [isLoginOpen, setIsLoginOpen] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [facilityToAuth, setFacilityToAuth] = useState<Facility | null>(null);\n  const [isCreatingFacility, setIsCreatingFacility] = useState(false);\n  const [newFacilityName, setNewFacilityName] = useState('');\n\n\n  // Load initial data\n  useEffect(() => {\n    const loadInitialData = async () => {\n      try {\n        setLoading(true);\n        await setupDefaultModules();\n        const [facilitiesData, modulesData] = await Promise.all([\n          getFacilities(),\n          getModules()\n        ]);\n        setFacilities(facilitiesData);\n        setModules(modulesData);\n      } catch (error) {\n        console.error('Error loading initial data:', error);\n        toast({\n          title: 'Error',\n          description: 'Failed to load initial data. Please try again.',\n          variant: 'destructive',\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadInitialData();\n  }, []);\n\n  // Load units when a facility is selected and authenticated\n  useEffect(() => {\n    if (selectedFacility && isAuthenticated) {\n      const loadUnits = async () => {\n        try {\n          setLoading(true);\n          const unitData = await getUnits(selectedFacility.id);\n          setUnits(unitData);\n          if (unitData.length > 0) {\n            setSelectedUnit(unitData[0]);\n          } else {\n            setSelectedUnit(null);\n          }\n        } catch (error) {\n          console.error('Error loading units:', error);\n          toast({\n            title: 'Error',\n            description: `Failed to load units for ${selectedFacility.name}.`,\n            variant: 'destructive',\n          });\n        } finally {\n          setLoading(false);\n        }\n      };\n      loadUnits();\n    }\n  }, [selectedFacility, isAuthenticated]);\n\n  const handleFacilitySelect = (facility: Facility) => {\n    if (selectedFacility?.id === facility.id && isAuthenticated) {\n      // If the same facility is clicked and we are authenticated, do nothing\n      return;\n    }\n    setFacilityToAuth(facility);\n    setIsLoginOpen(true);\n  };\n  \n  const handleLogin = async (data: {email:string, password: string}): Promise<boolean> => {\n    try {\n        await signInWithEmailAndPassword(auth, data.email, data.password);\n        toast({ title: \"Login Successful\", description: `Welcome to ${facilityToAuth?.name}` });\n        setSelectedFacility(facilityToAuth);\n        setIsAuthenticated(true);\n        setIsLoginOpen(false);\n        return true;\n    } catch(error) {\n        console.error(\"Login failed:\", error)\n        toast({ title: \"Login Failed\", description: \"Invalid credentials. Please try again.\", variant: 'destructive' });\n        return false;\n    }\n  };\n  \n  const handleCreateFacility = async () => {\n    if (!newFacilityName.trim()) {\n      toast({ title: 'Error', description: 'Facility name cannot be empty', variant: 'destructive' });\n      return;\n    }\n    try {\n      const newFacility = await createFacility({ name: newFacilityName });\n      setFacilities(prev => [...prev, newFacility]);\n      setNewFacilityName('');\n      setIsCreatingFacility(false);\n      toast({ title: 'Success', description: `Facility \"${newFacility.name}\" created.` });\n    } catch (error) {\n      console.error(\"Failed to create facility\", error);\n      toast({ title: \"Error\", description: \"Could not create facility\", variant: 'destructive' });\n    }\n  };\n\n  const handleCreateUnit = async (unitData: Omit<Unit, 'id' | 'createdAt' | 'updatedAt' | 'facilityId'>) => {\n    if (!selectedFacility) return;\n    try {\n      toast({ title: 'Creating Unit', description: 'Please wait...' });\n      const newUnit = await createUnit({ ...unitData, facilityId: selectedFacility.id });\n      setUnits(prevUnits => [...prevUnits, newUnit]);\n      setSelectedUnit(newUnit);\n      setIsCreateUnitOpen(false);\n      toast({ title: 'Success', description: `Unit \"${newUnit.designation}\" has been created.` });\n    } catch (error) {\n      console.error('Error creating unit:', error);\n      toast({ title: 'Error', description: 'Failed to create unit.', variant: 'destructive' });\n    }\n  };\n\n  const handleModuleToggle = async (moduleId: string) => {\n    try {\n      const moduleToUpdate = modules.find(m => m.id === moduleId);\n      if (!moduleToUpdate) return;\n      \n      const newEnabledState = !moduleToUpdate.enabled;\n      setModules(modules.map(module => module.id === moduleId ? { ...module, enabled: newEnabledState } : module));\n      await updateModule(moduleId, newEnabledState);\n      \n      toast({ title: 'Module Updated', description: `${moduleToUpdate.name} has been ${newEnabledState ? 'enabled' : 'disabled'}.` });\n    } catch (error) {\n      console.error('Error toggling module:', error);\n      setModules(modules); // Revert optimistic update\n      toast({ title: 'Error', description: 'Failed to update module.', variant: 'destructive' });\n    }\n  };\n\n  if (loading && facilities.length === 0) {\n    return (\n      <div className=\"container mx-auto p-6\">\n        <Skeleton className=\"h-10 w-48 mb-8\" />\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {[1,2,3,4].map(i => <Skeleton key={i} className=\"h-32 w-full\" />)}\n        </div>\n      </div>\n    );\n  }\n  \n  if (!isAuthenticated || !selectedFacility) {\n    return (\n       <div className=\"container mx-auto p-6\">\n         <h1 className=\"text-3xl font-bold mb-6\">Select a Facility</h1>\n         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n           {facilities.map(facility => (\n             <div key={facility.id} onClick={() => handleFacilitySelect(facility)}\n                  className=\"border rounded-lg p-6 flex flex-col items-center justify-center text-center cursor-pointer hover:bg-gray-50 hover:shadow-md transition-all\">\n                <Hospital className=\"w-12 h-12 mb-4 text-gray-500\" />\n                <h2 className=\"text-xl font-semibold\">{facility.name}</h2>\n             </div>\n           ))}\n            <div className=\"border-2 border-dashed rounded-lg p-6 flex flex-col items-center justify-center text-center\">\n              {isCreatingFacility ? (\n                <div className=\"w-full\">\n                  <input\n                    type=\"text\"\n                    value={newFacilityName}\n                    onChange={(e) => setNewFacilityName(e.target.value)}\n                    placeholder=\"New Facility Name\"\n                    className=\"w-full p-2 border rounded mb-2\"\n                    autoFocus\n                  />\n                  <div className='flex gap-2 justify-center'>\n                    <Button onClick={handleCreateFacility} size=\"sm\">Create</Button>\n                    <Button variant=\"ghost\" size=\"sm\" onClick={() => setIsCreatingFacility(false)}>Cancel</Button>\n                  </div>\n                </div>\n              ) : (\n                <button onClick={() => setIsCreatingFacility(true)} className=\"w-full h-full flex flex-col items-center justify-center\">\n                  <PlusCircle className=\"w-12 h-12 mb-4 text-gray-400\" />\n                  <h2 className=\"text-xl font-semibold text-gray-600\">Add Facility</h2>\n                </button>\n              )}\n            </div>\n         </div>\n         <LoginDialog open={isLoginOpen} onOpenChange={setIsLoginOpen} onLogin={handleLogin} />\n       </div>\n    )\n  }\n\n  return (\n    <div className=\"container mx-auto p-6\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <div>\n            <h1 className=\"text-3xl font-bold\">Facility Setup: {selectedFacility.name}</h1>\n            <Button variant=\"link\" className=\"p-0 h-auto\" onClick={() => { setIsAuthenticated(false); setSelectedFacility(null); }}>Switch Facility</Button>\n        </div>\n        <Button onClick={() => setIsCreateUnitOpen(true)}>Create New Unit</Button>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <div className=\"space-y-4\">\n          <h2 className=\"text-xl font-semibold mb-4\">Units</h2>\n          {units.length > 0 ? (\n            units.map(unit => (\n              <UnitCard \n                key={unit.id} \n                unit={unit} \n                isSelected={selectedUnit?.id === unit.id}\n                onSelect={() => setSelectedUnit(unit)}\n              />\n            ))\n          ) : (\n            <div className=\"bg-gray-50 border rounded-lg p-6 text-center\">\n              <p className=\"text-gray-500 mb-4\">No units created for this facility.</p>\n              <Button variant=\"outline\" onClick={() => setIsCreateUnitOpen(true)}>\n                Create First Unit\n              </Button>\n            </div>\n          )}\n        </div>\n\n        <div className=\"lg:col-span-2\">\n          <h2 className=\"text-xl font-semibold mb-4\">\n            {selectedUnit ? `${selectedUnit.designation} Layout` : 'Select or Create a Unit'}\n          </h2>\n          {selectedUnit ? (\n            <PatientGrid unitId={selectedUnit.id} />\n          ) : (\n            <div className=\"bg-gray-50 border rounded-lg p-12 text-center\">\n              <p className=\"text-gray-500\">Select a unit or create one to see the layout.</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"mt-12\">\n        <h2 className=\"text-2xl font-semibold mb-6\">Module Configuration</h2>\n        {modules.length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {modules.map(module => (\n              <ModuleToggleCard\n                key={module.id}\n                module={module}\n                onToggle={() => handleModuleToggle(module.id)}\n              />\n            ))}\n          </div>\n        ) : (\n          <div className=\"bg-gray-50 border rounded-lg p-6 text-center\">\n            <p className=\"text-gray-500\">No modules available.</p>\n          </div>\n        )}\n      </div>\n\n      <CreateUnitDialog\n        open={isCreateUnitOpen}\n        onClose={() => setIsCreateUnitOpen(false)}\n        onCreateUnit={handleCreateUnit}\n      />\n      <LoginDialog open={isLoginOpen} onOpenChange={setIsLoginOpen} onLogin={handleLogin} />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}