"use strict";exports.id=784,exports.ids=[784],exports.modules={3784:(t,a,e)=>{e.d(a,{Dq:()=>f,QC:()=>b,WM:()=>k,YB:()=>w,YU:()=>g,eI:()=>y});var n=e(6319),i=e(5535),d=e(146),s=e(7150);(0,d.c7)(n.yA),(0,s.xI)(n.yA);let c=(0,i.rJ)(n.db,"units"),r=(0,i.rJ)(n.db,"patients"),o=(0,i.rJ)(n.db,"nurses"),p=(0,i.rJ)(n.db,"pcts"),m=(0,i.rJ)(n.db,"staff"),l=(0,i.rJ)(n.db,"modules"),u=new Map;async function f(t){let a=Date.now(),e=(0,i.H9)(c),n={...t,id:e.id,createdAt:a,updatedAt:a};return await (0,i.BN)(e,n),n}async function g(){return(await (0,i.GG)(c)).docs.map(t=>({id:t.id,...t.data()}))}async function b(t){let a=u.get(t);if(a?.patients.length>0)return a.patients;let e=(0,i.P)(r,(0,i._M)("unitId","==",t));return(await (0,i.GG)(e)).docs.map(t=>({id:t.id,...t.data()}))}async function y(){return(await (0,i.GG)(l)).docs.map(t=>({id:t.id,...t.data()}))}async function w(t,a){let e=(0,i.H9)(l,t);await (0,i.mZ)(e,{enabled:a,updatedAt:Date.now()})}async function M(t){let a=Date.now(),e=(0,i.wP)(n.db);for(let n of t){let t=(0,i.H9)(l,n.id);(await (0,i.x7)(t)).exists()||e.set(t,{...n,updatedAt:a})}await e.commit()}async function k(){await M([{id:"mock-patient",name:"Mock Patient Data",description:"Generate mock patient data for testing",enabled:!0},{id:"spectra-pool",name:"Spectra Pool Management",description:"Manage spectra pool assignments",enabled:!1},{id:"acuity-tracking",name:"Acuity Tracking",description:"Track and manage patient acuity levels",enabled:!0},{id:"bed-management",name:"Bed Management",description:"Track bed availability and assignments",enabled:!0},{id:"staff-messaging",name:"Staff Messaging",description:"Internal messaging system for staff",enabled:!1}])}}};