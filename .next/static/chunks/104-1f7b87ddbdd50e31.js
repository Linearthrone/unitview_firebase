"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[104],{6104:(a,t,e)=>{e.d(t,{Dq:()=>f,QC:()=>b,WM:()=>M,YB:()=>y,YU:()=>g,eI:()=>w});var n=e(5813),i=e(5317),d=e(7505),s=e(4903);(0,d.c7)(n.yA),(0,s.xI)(n.yA);let c=(0,i.rJ)(n.db,"units"),r=(0,i.rJ)(n.db,"patients"),o=(0,i.rJ)(n.db,"nurses"),l=(0,i.rJ)(n.db,"pcts"),p=(0,i.rJ)(n.db,"staff"),u=(0,i.rJ)(n.db,"modules"),m=new Map;async function f(a){let t=Date.now(),e=(0,i.H9)(c),n={...a,id:e.id,createdAt:t,updatedAt:t};return await (0,i.BN)(e,n),n}async function g(){return(await (0,i.GG)(c)).docs.map(a=>({id:a.id,...a.data()}))}async function b(a){let t=m.get(a);if((null==t?void 0:t.patients.length)>0)return t.patients;let e=(0,i.P)(r,(0,i._M)("unitId","==",a));return(await (0,i.GG)(e)).docs.map(a=>({id:a.id,...a.data()}))}async function w(){return(await (0,i.GG)(u)).docs.map(a=>({id:a.id,...a.data()}))}async function y(a,t){let e=(0,i.H9)(u,a);await (0,i.mZ)(e,{enabled:t,updatedAt:Date.now()})}async function k(a){let t=Date.now(),e=(0,i.wP)(n.db);for(let n of a){let a=(0,i.H9)(u,n.id);(await (0,i.x7)(a)).exists()||e.set(a,{...n,updatedAt:t})}await e.commit()}async function M(){await k([{id:"mock-patient",name:"Mock Patient Data",description:"Generate mock patient data for testing",enabled:!0},{id:"spectra-pool",name:"Spectra Pool Management",description:"Manage spectra pool assignments",enabled:!1},{id:"acuity-tracking",name:"Acuity Tracking",description:"Track and manage patient acuity levels",enabled:!0},{id:"bed-management",name:"Bed Management",description:"Track bed availability and assignments",enabled:!0},{id:"staff-messaging",name:"Staff Messaging",description:"Internal messaging system for staff",enabled:!1}])}}}]);